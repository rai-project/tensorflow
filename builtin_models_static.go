// Code generated by go-bindata.
// sources:
// builtin_models/BVLC_AlexNet_Caffe.yml
// builtin_models/BVLC_GoogLeNet_Caffe.yml
// builtin_models/DeepLabv3_MobileNetv2_PASCAL_VOC.yml
// builtin_models/Faster_RCNN_ResNet50_COCO.yml
// builtin_models/Mask_RCNN_Inception_v2_COCO.yml
// builtin_models/MobileNet_v1_1.0_224.yml
// builtin_models/SRGAN.yml
// builtin_models/SSD_MobileNet_v1_COCO.yml
// builtin_models/SSD_MobileNet_v2_COCO.yml
// builtin_models/SSD_MobileNet_v2_Quantized_300x300_COCO.yml
// builtin_models/SSD_ResNet50_FPN_COCO.yml
// DO NOT EDIT!

package tensorflow

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlc_alexnet_caffeYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xdf\x6f\xdb\x38\x12\x7e\xd7\x5f\x31\x80\x51\x24\xbd\xb3\x24\x4b\xb6\x13\x57\x07\x1c\xee\x9a\xfb\x09\xdc\xe5\xa1\xdb\xdd\x7d\x28\x0a\x63\x44\x8d\x2c\x36\x14\x29\x90\x23\x3b\xce\x5f\xbf\x20\x25\x59\x0e\xda\xc5\xe6\xc5\xa6\x66\xe6\x1b\x0e\x3f\x0e\x3f\x52\x63\x4b\x05\x7c\xfc\xe5\x7f\x0f\xfb\xbf\x2b\x7a\x7e\x24\xde\x3f\x60\x5d\x13\x2c\xc0\xbb\xc0\xd4\x70\x36\xbd\x85\xd6\x54\xa4\xa2\xda\x62\x4b\x27\x63\x9f\x8a\x08\x60\x80\x7e\x26\xed\x8c\xfd\x97\x32\x27\x58\xc0\xc5\x0f\xb5\xb1\xc0\x0d\x8d\x38\x80\x23\x59\x27\x8d\x2e\x20\x4b\xb2\xfc\x55\xe4\xe8\x01\x61\x34\x5b\x94\x9a\xa3\xab\xd8\x15\x2c\x2e\x01\x52\xd7\xc6\xb6\xc8\xc3\x18\x1c\xb5\xa8\x59\x8a\x8b\x7f\xf0\x46\x3e\x0f\x4a\x4d\xb6\x80\x05\x5c\x3e\x1c\xf4\x8e\x2a\x60\x03\x1d\x59\x1f\x39\x54\x06\x9d\xa5\x4a\x0a\x9f\x33\x02\x58\x40\xdb\x2b\x96\x9d\x22\xe8\x14\xb2\x0f\x73\x20\x50\x43\x49\xe0\x3a\x12\xb2\x96\x54\x45\x00\xd8\x56\x77\x1b\x4f\x01\xc0\xa1\xeb\x0b\xb0\x28\x3b\x6b\xbe\x91\xe0\x54\xa0\x6d\x55\xcc\x81\x94\x5a\x99\x53\x11\x62\x63\xd1\xf5\x21\x5c\xbc\x2d\xfc\x10\xc2\xbb\x4e\xdc\x6d\x14\x15\x6f\x43\x8e\xd1\x23\xf6\x0d\x95\x5d\x03\x2a\x72\xc2\xca\x8e\x03\xed\x7f\x8d\x00\x3e\x37\xd2\x8d\x14\x49\x07\x08\x96\x3a\x25\xc5\x40\xbe\xa9\xe7\xad\x85\x01\x59\x52\xe5\xf7\xc4\x9b\xc7\x36\x82\xae\x2f\x27\x44\x12\x01\xfc\x43\xd6\x35\x59\xd2\x82\x5c\x01\xda\x30\x84\xcd\x96\xfa\x00\x27\xc9\x4d\x40\x5a\x52\xf2\xd0\xb0\xb7\x55\xc8\x18\x63\x7f\x68\x49\x73\x48\xf1\x97\x08\x40\x6a\xc9\x12\x95\x7c\xf1\x11\xda\xe8\xf8\x85\xac\x81\x52\xa2\x23\xe7\x77\x76\x95\x64\x20\xb5\x63\xc2\xca\xd7\x98\xc1\x6d\x6d\x7a\x5d\x81\x26\x41\xce\xa1\x3d\x0f\x5d\x39\xce\xbb\x04\x74\x73\xca\x61\x65\x6c\x20\x83\x03\x1e\x09\x6a\x85\x0c\xca\x38\xf7\x3e\x09\x6c\x10\x94\xbd\xae\x14\x55\x33\x29\xbe\x64\xc9\x64\x07\xe8\xfa\x6e\xb5\x5c\xad\x56\xe0\x34\x76\xae\x31\x9c\x0c\x20\x72\x0c\x47\x54\xb2\xc2\xb1\xc7\xc6\xf6\x43\x2d\x08\xaa\xde\xfa\xa5\xcc\x4c\xf8\x8a\xe6\x8c\xdb\x5d\xc8\x18\xf8\x99\x73\x00\x0a\xd1\x5b\x14\xe7\x08\x60\x7b\x9f\xe4\xdb\xdd\x3b\x40\x5d\x85\x62\x21\x4b\x76\xeb\x0f\x9b\x5d\x72\xbd\x7f\xa6\xf4\x47\xc0\x6f\x22\x9b\x2e\xce\x2e\x78\x8f\xce\x06\x2c\x46\x10\x9c\xdb\xd9\xb9\x5b\x25\xf9\x3b\x30\xc3\x9e\x5e\xcd\xee\x88\x97\xd0\x3b\x5f\xee\xb7\xde\x71\x70\x0b\xd2\x4c\x16\x84\x35\x9d\x67\xeb\xf6\xe7\xe0\xf6\x1e\x3c\x92\xc5\x43\x90\x91\x6c\x15\x02\xdc\x12\x6e\x37\xf0\x67\xc8\x46\xd4\x7b\xf8\x13\xe4\xd0\x4a\x6b\x8d\x5d\x82\x6b\x4c\xaf\xaa\xb1\x64\x7f\xd2\xa0\x94\x0c\x8d\x3c\x34\x64\x2f\xb5\x25\xef\x5f\x37\xa8\xa7\x2d\x70\x48\x15\x94\x67\xf8\xe7\x11\x35\xfc\xd4\x90\x6a\xb0\x25\x0b\x7f\x73\xd3\x30\xb2\x34\xb7\xe0\x02\xe6\xaf\x20\x0b\xd8\x79\x95\x48\xe1\x44\xa5\x93\x4c\x7e\x48\x2c\x92\x64\xea\xf0\x69\x49\x93\xa2\xc5\xd0\x30\x77\xae\x48\xd3\x83\xe4\xa6\x2f\x13\x61\xda\xd4\x0b\x69\x1a\x04\x34\x65\x4b\x94\xb6\xe8\x98\x6c\x1a\x30\x2e\x2d\x8f\x4a\xec\x51\xd1\xb3\x26\x7e\x43\x86\x93\x7c\x92\xe9\xff\x03\x34\x9e\xd6\x1e\x1b\x1d\xff\xb7\xc5\x03\x3d\x12\xc7\xf9\x2a\xcb\xe3\x23\xce\xd5\x14\x69\x3a\xac\x23\xd1\xb2\x73\x89\x10\xc3\x67\xba\xd9\xe5\x9b\x58\x7a\x98\x26\x8e\x85\x42\xe7\x64\x3d\x1e\xce\xd8\xf7\x57\x5c\x11\x75\xb1\x30\xfa\x68\x54\xef\xad\xa8\x62\x4d\xbd\x0d\x7f\xec\x75\xda\x25\x5d\x55\x47\x0b\x50\x52\x90\x76\xf4\x4a\x04\xa2\xd1\x58\x40\xaf\x2d\x39\xb6\x52\x30\x55\xd1\x02\xa4\xee\x7a\x0e\xf4\xce\xb1\x83\xad\x08\x72\x5b\x4b\xeb\x78\x88\x02\x3e\x77\xf4\xdd\xb5\x11\x07\x73\x01\xa1\xf6\x20\x6b\x0b\xb8\xd2\xaa\xa9\x8a\xab\x3c\x21\xe8\x95\x9c\x85\x73\x1a\xa6\x98\xb3\x74\xe8\xef\x1f\x26\x1b\x3a\x21\x4c\x3d\x9b\x42\x04\x00\x29\xf2\xf2\xb3\x1f\x2a\xa8\x95\x41\x5e\xe7\xa3\x2f\xe4\xdb\x2b\x3c\xfb\x6b\xe6\xc6\xab\xd5\xcd\xe8\x51\x78\x36\x3d\x17\x70\xf3\x9f\x5f\x1f\x26\x9b\x30\xca\xd8\xbd\x5f\x53\x01\x37\x1f\xff\xfd\x69\xb2\x57\xb2\x25\xed\xef\x2e\x57\xc0\x97\xf5\x12\xf2\xfc\x3e\xfc\x7c\x1d\xfd\x2d\xa1\x2e\xe0\x4b\x96\xaf\x97\x90\x65\xf7\x4b\xc8\x56\x9b\xaf\x91\xe9\xb9\xeb\x79\x20\xd0\xaf\x2d\x54\x3f\x12\x31\xf8\xfc\x69\x0e\x45\xbf\xde\xe9\x80\xc0\x1f\xf1\x37\xc0\x66\x0a\xa2\x1f\x50\x38\xc6\x28\x2c\xc3\xce\xfc\x31\x83\xbf\xcf\x5f\x67\x4d\x89\xa5\x54\x92\x25\xb9\x0b\x8b\xde\x3a\x30\x53\x13\x72\x6f\xc9\xed\x7b\xab\x8a\xa9\xb1\xdd\x3a\xc1\x16\x5f\x8c\xc6\x93\x0b\x27\xc5\xb1\xb1\x94\x84\x6b\x2d\x31\xf6\x90\xba\xb3\x76\xc4\x2e\x9d\xfa\x7c\x34\x24\xfc\xcc\xaf\xb3\x8a\x86\xc4\x93\xeb\xdb\x02\x36\x55\xbe\xde\x94\xdb\xdd\x7a\x8d\x02\x37\x9b\x0f\xf9\x6e\x75\xb7\xc5\x6c\xb7\xaa\xca\xf5\x2a\xbb\xc3\x28\xf4\xa1\x5f\xe0\x74\xfd\x4f\x9a\x73\xb0\xd8\x35\x41\x3b\x4f\xe4\x2f\x2d\x07\x96\x9c\xe9\xad\x20\xbf\xf8\x12\x1d\xcd\xc5\xbb\xb7\x54\x3f\x4a\xc4\x7c\x3f\x4f\x96\x08\x86\xc9\xf6\x1d\x72\x53\xc0\xb5\x86\xec\xb3\x64\x95\xd6\xd6\xbc\x90\x0e\xdd\xa5\x92\xae\xbc\x84\xcf\xab\xbc\xab\xf2\x75\xbd\x59\x65\x1f\x32\x91\x55\x02\xc5\x7d\x96\xef\xb6\xf5\x26\xc3\xdd\x16\xcb\x6a\xe7\x4f\x84\x74\x7b\xb4\xa2\x91\xc7\xf1\xb5\x51\xa3\x72\xfe\x0d\x28\x6b\x60\xdb\xd3\xd2\x77\xc0\x70\x15\x4c\x4b\x1b\x9e\x05\x7e\xc0\x06\x50\xc3\x08\x1f\xcf\xa8\x8f\x9c\xab\xbe\xe6\x69\x30\x84\x74\x15\x69\xc3\xe4\xc7\x23\xaa\x96\x8a\xc2\xb3\xd2\x4d\x8d\xf9\x3d\xcd\x5e\xad\xc6\x97\xc6\x34\x25\x32\x5b\x59\xf6\x3c\xc8\x3a\x3d\xb3\x45\x18\x55\x0b\x66\x5f\x04\xf0\x24\x75\x55\xc0\xc3\xe3\xe3\x58\xa1\xff\xf6\x33\x0d\x4a\x77\xc1\xdc\x3e\x3c\x3e\x2e\xe1\x93\xff\x49\x92\x70\xd9\x4c\x37\xf4\xde\x9f\x74\x47\x5c\xc0\xa4\xc1\x5e\x8f\x06\xdb\xe5\x81\x79\xfd\xc8\x88\x00\x5a\xd4\xb2\x26\xc7\x7b\xec\xb9\x31\xb6\x00\x2c\xab\x5e\x55\xd1\x6f\x01\x00\x00\xff\xff\x8d\x59\x89\xc2\x7a\x0b\x00\x00"

func bvlc_alexnet_caffeYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlc_alexnet_caffeYml,
		"BVLC_AlexNet_Caffe.yml",
	)
}

func bvlc_alexnet_caffeYml() (*asset, error) {
	bytes, err := bvlc_alexnet_caffeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC_AlexNet_Caffe.yml", size: 2938, mode: os.FileMode(420), modTime: time.Unix(1553752989, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlc_googlenet_caffeYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x51\x8f\xe3\xc6\x0d\x7e\xd7\xaf\x20\xce\x38\xec\x6e\xeb\x95\x2d\x5b\xf6\x69\x15\xa0\x68\x6f\x83\x5c\x8b\x1e\xf6\x21\x49\x9b\x87\x20\x30\xa8\x11\x25\x4d\x76\x34\xa3\xce\x50\xf6\x79\x7f\x7d\x31\x23\xc9\xf2\x5e\xee\x90\x7b\x31\x2c\xf2\x23\x87\xfc\x86\x43\x52\x63\x4b\x39\xbc\xff\xef\xc7\xc7\xc3\x07\x63\xea\x8f\xf4\x44\x7c\x78\xc4\xaa\x22\x58\x80\x57\x82\xa9\xe0\x6c\x7a\x0b\xad\x29\x49\x45\x95\xc5\x96\x4e\xc6\x3e\xe7\x11\xc0\x60\xfc\x33\x69\x67\xec\x0f\xca\x9c\x60\x01\x17\x3d\x54\xc6\x02\x37\x34\xda\x01\x1c\xc9\x3a\x69\x74\x0e\x49\x9c\x6c\x5e\x21\x47\x0d\x08\xa3\xd9\xa2\xd4\x1c\x5d\x61\xd7\xb0\xb8\x00\xa4\xae\x8c\x6d\x91\x87\xff\xe0\xa8\x45\xcd\x52\x5c\xf4\x83\x36\xf2\x7e\x50\x6a\xb2\x39\x2c\xe0\xf2\xe1\xa0\x77\x54\x02\x1b\xe8\xc8\x7a\xe4\x10\x19\x74\x96\x4a\x29\xbc\xcf\x08\x60\x01\x6d\xaf\x58\x76\x8a\xa0\x53\xc8\x1e\xe6\x40\xa0\x86\x82\xc0\x75\x24\x64\x25\xa9\x8c\x00\xb0\x2d\xf7\xa9\xa7\x00\xa0\xee\xfa\x1c\x2c\xca\xce\x9a\xdf\x49\xf0\x4a\xa0\x6d\xd5\x3d\x07\x52\x2a\x65\x4e\x79\xc0\xde\x8b\xae\x0f\x70\xf1\x6d\xf0\x3a\xc0\xbb\x4e\xec\x53\x45\xf9\xb7\x59\x8e\xe8\xd1\xf6\x1b\x22\xbb\x36\x28\xc9\x09\x2b\x3b\x0e\xb4\xff\x2d\x02\xf8\xb9\x91\x6e\xa4\x48\x3a\x40\xb0\xd4\x29\x29\x06\xf2\x4d\x35\x5f\x2d\x0c\x96\x05\x95\xfe\x4e\xbc\xd8\x17\x92\xf2\x85\x04\x5d\x5f\x4c\x36\x31\xfc\x42\x70\x32\xbd\x2a\x41\xc9\x67\xf2\xf7\xc0\x0d\xea\x67\x78\x6c\xac\x74\x2c\x51\xc3\x4f\x2f\x54\x53\x79\x0e\x95\x83\x4a\x81\x0f\xa0\x21\xd5\x4d\x7e\x3f\x8b\x60\x3e\x26\xc4\x11\x47\x00\xdf\xcb\xaa\x22\x4b\x5a\x90\x0b\xf5\x69\x18\x42\x45\x49\x5d\xc3\x49\x72\x33\xba\x51\xb2\x6e\xd8\xcb\x4a\x64\xbc\xc7\xbe\x6e\x49\x73\xf0\xfb\xdd\x57\xad\x9c\x40\x45\xe0\x23\xf3\x75\xc0\xf7\xd6\xe3\xbf\xec\xa0\x77\xe4\xe0\xcd\x27\x3c\x4a\xb2\x6f\x7c\xa2\x52\x4b\x96\xa8\xe4\x0b\x05\x57\x27\xf2\xe7\x3b\x90\xda\x31\x61\xe9\x73\x79\x53\x63\xef\x9c\x44\xfd\xc6\x3b\xf8\x5f\x2f\xc5\xf3\xc1\x19\x75\x24\x1b\x77\xd6\xb0\xe1\x4f\x3c\xb8\x45\x28\xc7\x1c\x19\x14\xa1\x0d\x41\x5a\x64\x82\x92\x04\x9e\xa1\x33\x4a\x8a\x73\xa0\x36\x9c\x65\xac\xac\xa5\x46\x05\x9f\x79\x5b\x7a\x08\x7b\x9a\xcd\xc9\x7b\x6d\x7b\xd1\x40\x85\x8e\xc9\xce\xc9\xdf\xee\xd7\x40\x9d\x11\x8d\x83\xa3\x83\xcd\x6e\xfa\xba\xfb\x2e\xd4\x07\x41\xd1\xeb\x52\x51\x39\x97\x89\x3f\x52\x32\xd9\xe1\x92\x36\xcb\x74\xbd\x5e\xae\xd7\x6b\x70\x1a\x3b\xd7\x18\xbe\x72\x79\x07\xbd\xf3\x87\x7c\x31\xd9\xa9\xfe\x5e\x1f\x60\x0a\xff\x94\x7d\xb8\x6c\xba\xfb\x04\x50\x88\xde\xa2\x38\xc3\x3e\x8b\xdf\xbd\x85\xdb\x6d\x12\x6f\xdf\x02\x59\x6b\xec\x1d\xa0\x2e\x47\xe0\x6e\x06\x66\x59\xfc\xf0\x16\x6e\x93\x24\x4e\x2e\x40\x33\x30\x75\x44\x25\xcb\x21\x6e\x47\xbc\x1c\xa3\xfb\xbd\x77\x1c\xd4\x82\xb4\xe7\x46\x58\xd3\xf9\x4a\xbb\xfd\x4f\x50\x7b\x0d\x1e\xc9\x62\x1d\x1a\x65\xb2\x0e\x00\xb7\x84\xdb\x14\xfe\x0a\xc9\x68\x75\x07\x7f\x81\x0d\xb4\xd2\x9f\xb7\x04\xd7\x84\x57\x30\x24\x03\x08\x85\x64\x68\x64\xdd\x90\xbd\xc4\x19\xdf\x79\x02\x64\x2b\x75\xed\xc2\x73\x28\x8e\x4a\x1c\xea\x50\xf0\x9a\x78\xa8\x4a\xd1\x7f\xff\xf4\x34\x86\x59\x20\x8b\xe6\xe0\xe4\x0b\xe5\xc9\x26\xf3\x29\x21\xfc\x3b\x5d\x0b\xff\x0a\xfe\x31\xc6\xf7\x83\xb1\x27\xb4\x25\x74\xe8\x5c\x0e\xbb\xfd\x26\xce\xd2\x04\x5a\x17\x5f\x61\xde\xa3\x78\xbe\x02\x25\xc9\x66\x1b\x67\xe9\x67\xa0\xd1\xd1\xfd\x04\xce\x21\xd9\x67\x59\x9c\x8d\xb0\xab\xc6\x71\x42\x37\x54\x13\x95\x50\x9c\xe1\x27\xb2\xb5\x34\xf0\xa1\xc7\x12\xad\xc5\x16\xe1\xef\xae\xf6\x1f\x91\xa5\xcb\xbb\x85\x05\xcc\x5f\xa1\x5d\x63\xe7\xbb\xf7\x0a\x4e\x54\x38\xc9\xe4\xff\x12\x8b\x38\x9e\x3a\xcf\x74\x11\xd3\xa4\xb9\x87\x86\xb9\x73\xf9\x6a\x55\x4b\x6e\xfa\x22\x16\xa6\x5d\xf9\x11\xb7\x0a\x83\x6d\xc5\x96\x68\xd5\x86\x5a\x5f\x05\x1b\xb7\x7a\xcd\xef\x2b\x1f\x68\x3f\xc9\x63\x6c\x6c\xbd\xc2\xc2\xad\x92\x74\xfd\x10\xa7\x59\xba\x89\x16\xa0\xa4\x20\xed\xe8\x55\x37\x8c\x46\x61\x0e\xbd\xb6\xe4\xd8\x4a\xc1\x54\x46\x0b\x90\xba\xeb\xd9\x0d\x6d\x6f\xc2\x0e\xb2\x3c\xcc\x9d\x4a\x5a\xc7\x03\x0a\xf8\xdc\xd1\x1f\xe6\xe7\x7d\x10\xe7\x20\x5b\xac\x29\xf4\xf7\x05\x5c\x35\xed\x29\x8a\x2b\x3f\x01\xf4\xaa\xaf\x87\xe7\x19\x8e\x98\xbd\x74\xe8\x07\x31\x93\x0d\xd4\x87\xa3\x67\x51\x40\x00\x90\x22\xdf\xe1\x0e\x43\x04\x95\x32\xc8\xdb\xcd\xa8\x53\x78\x26\x7b\x18\x56\x81\x1b\xdf\x0f\x6f\x66\x85\xe9\x39\x87\x9b\x7f\xfe\xf2\x38\xc9\x84\x51\xc6\x1e\x7c\x4a\x39\xdc\xbc\xff\xf0\xe3\x24\x2f\x65\x4b\xda\xcf\x70\x97\xc3\xaf\xdb\x25\x6c\x36\x69\xf8\xf9\x6d\xd4\xb7\x84\x3a\x87\x5f\x93\xcd\x76\x09\x49\xf2\x6e\x09\xc9\x3a\xfd\x2d\x32\x3d\x77\x3d\x0f\xfc\xf9\xd4\x42\xf0\x23\x0f\x83\x2e\x82\x91\x35\xa1\xd0\x39\x59\x8d\xe3\x23\x58\xe0\x97\xe8\x1b\xcc\x66\x06\xa2\x2f\x30\x38\x62\x14\x16\xe1\x62\xfe\x9c\xc0\xaf\xd3\xd7\x59\x53\x60\x21\x95\x64\x49\xee\x10\xa8\xcc\xe1\xc6\x4b\x07\x66\x2a\x42\xee\x2d\xb9\x43\x6f\x55\x1e\x4a\x32\x5f\xad\xdc\x36\xc6\x16\x5f\x8c\xc6\x93\x0b\xb5\xed\xd8\x58\x8a\xc3\x78\x0f\x85\xea\xce\xda\x11\xbb\x55\xb8\x64\x4d\x3c\x0a\xe2\xa1\xb1\x5e\x79\x15\x0d\x89\x67\xd7\xb7\x39\xa4\xe5\x66\x9b\x16\xbb\x6c\xbb\x45\x81\x69\xfa\xb0\xc9\xd6\xfb\x1d\x26\xd9\xba\x2c\xb6\xeb\x64\x8f\x51\x28\x43\x9f\xe0\xb4\x06\x4d\x6f\xbc\xb6\xd8\x35\xa1\xdb\x4e\x73\xcd\x92\x33\xbd\x15\xe4\x93\x2f\xd0\xd1\x1c\xbc\xfb\x96\xe8\xc7\x27\x39\xef\x29\x93\x24\x82\xe1\xb0\x43\x87\xdc\xe4\x9f\xf5\xc4\x43\x12\xaf\x57\x95\x35\x2f\xa4\x0f\xc3\x3e\xd0\x15\x11\x80\x74\x07\xb4\xa2\x91\xc7\x71\x89\xaa\x50\x39\xbf\xda\xca\x0a\xd8\xf6\xe4\xc7\x20\x0d\xfd\x7f\x8a\x74\xd8\x76\xfc\x1f\x36\x80\x1a\x46\xf3\xf1\xc5\x79\xe4\x1c\xc4\x75\xda\x83\x20\xb8\x2b\x49\x1b\x0e\xb3\x7e\xb4\xaa\xa4\xa2\xb0\x2d\xbb\xa9\xce\xfe\xc8\x9a\xef\xe9\xe3\xa2\x33\x1f\x39\x1c\x35\x5f\xd3\x26\xdb\xae\xb3\x77\xd5\x1e\x1f\xc4\x66\x57\x66\xbb\x84\x76\x59\x42\x98\x3c\x3c\xa4\x69\x55\x3d\x94\x11\x32\x5b\x59\xf4\x3c\x34\x52\xfa\xc4\x16\x41\x13\x87\x3d\x7b\xd6\x45\x00\xcf\x52\x97\x39\x3c\x3e\x3d\x8d\x49\xf9\x6f\x1f\x9c\xa6\xde\xa2\xba\xd8\xdc\x3e\x3e\x3d\x2d\xe1\x47\xff\x13\xc7\x61\x2c\x4d\xdb\xc1\xc1\xbf\x75\x47\x9c\xc3\xbf\x7c\x99\xf9\x3d\x6c\x01\xa3\xec\xb2\x6a\x87\x26\x36\x1a\x44\x00\x2d\x6a\x59\x91\xe3\x03\xf6\xdc\x18\x9b\xc3\x63\x43\xba\x86\x8f\x32\xfa\x7f\x00\x00\x00\xff\xff\x8d\x1a\x4e\x53\x88\x0c\x00\x00"

func bvlc_googlenet_caffeYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlc_googlenet_caffeYml,
		"BVLC_GoogLeNet_Caffe.yml",
	)
}

func bvlc_googlenet_caffeYml() (*asset, error) {
	bytes, err := bvlc_googlenet_caffeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC_GoogLeNet_Caffe.yml", size: 3208, mode: os.FileMode(420), modTime: time.Unix(1553755443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deeplabv3_mobilenetv2_pascal_vocYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4b\x6f\xdc\x36\x10\xbe\xeb\x57\x0c\xb0\x87\x24\x80\x2d\x69\x1f\x71\xbc\x3a\x14\x08\xb6\x28\x50\xc0\xb1\x83\xa6\xcd\xa1\x17\x62\x44\x8d\x24\xd6\x12\x29\x90\xa3\x5d\x3b\xbf\xbe\xe0\x63\x1f\x86\x53\xc0\xa7\x5e\x0c\xd1\xf3\xcd\x70\x1e\xdf\x37\x4b\x8d\x23\x55\xf0\x2b\xd1\x74\x87\xf5\x7e\x2d\xbe\x98\x5a\x0d\x74\x4f\xbc\x5f\x89\xaf\x9f\xbf\xed\x3e\xdf\x89\xef\x0f\x3b\x58\x80\x07\x82\x69\xe1\xd9\xcc\x16\x46\xd3\xd0\x90\xb5\x16\x47\x3a\x18\xfb\x58\x65\x00\x31\xd0\x9f\xa4\x9d\xb1\xbf\x0d\xe6\x00\x0b\x38\xd9\xa1\x35\x16\xb8\xa7\xe4\x07\xb0\x27\xeb\x94\xd1\x15\x2c\xf3\xe5\xea\x05\x32\x59\x40\x1a\xcd\x16\x95\xe6\xec\x02\x5b\xc2\xe2\x04\x50\xba\x35\x76\x44\x8e\xdf\xe0\x68\x44\xcd\x4a\x9e\xec\xd1\x9a\xf9\x38\xa8\x34\xd9\x0a\x16\x70\x3a\x38\x98\x1d\x35\xc0\x06\x26\xb2\x1e\x19\x33\x03\xda\xe3\x30\x87\x98\x19\x00\x8e\xcd\xcd\xc6\x97\x06\xd0\x4d\x73\x05\x16\xd5\x64\xcd\x3f\x24\xb9\x90\x68\xc7\xe1\x9a\x43\xb1\xed\x60\x0e\x55\xc0\x5e\xcb\x69\x0e\x70\xf9\x36\x78\x17\xe0\xd3\x24\x6f\x36\x03\x55\x6f\xf3\x4c\xe8\xe4\xfb\x86\xcc\x2e\x1d\x1a\x72\xd2\xaa\x89\x43\x3b\x7f\xc9\xe0\x72\x5c\xdf\x8e\x0d\xfc\x46\xdd\x48\x9a\x63\x67\x43\x5b\xae\xe0\xd0\x2b\xd9\x83\x72\x10\x66\x42\x0d\x18\x1d\xe6\xb9\x7b\xd8\x3d\xc0\xfb\x9d\x19\x47\xa3\xe1\xa1\xf6\x19\x38\x3f\x8d\x9d\xd1\x4c\x4f\xfc\x01\x1a\x64\x74\xc4\x79\x06\xf0\x97\xf3\xf3\xf7\xec\xd2\x81\x5d\xd2\x48\x23\xf6\x46\x8a\x10\x13\xe7\xee\x7d\x43\x34\x0d\x81\x85\xa3\xde\xaf\xc4\x84\x4e\xe2\x10\xcd\x02\xe7\x4e\xac\xca\xe5\xad\x28\x97\x62\xb5\xfd\x00\xad\x35\xe3\x65\xfa\x89\xc1\xf0\x25\xcc\xf1\x6f\x63\xf2\xcc\x52\x4b\x96\xb4\x24\xe7\x67\x7f\x3e\x85\xb1\xe3\xe4\x59\x50\xc0\x81\x6a\xa7\x98\xfc\x27\xb1\xcc\x73\x88\x3d\xaa\x95\xee\x5e\x30\xf6\x1a\x7a\xe6\xc9\x55\x45\xd1\x29\xee\xe7\x3a\x97\x66\x2c\xce\x6d\x2e\x02\xce\x15\x6c\x89\x8a\x11\x1d\x93\x2d\x2c\x39\x42\x2b\xfb\x22\xd5\xf5\xf6\x28\xf5\x60\xea\xff\x8a\x52\x74\xeb\xc6\xc8\x88\x14\x3f\x8c\xc9\xc7\x26\x1b\x94\x24\xed\xa8\x82\xcf\x13\xca\x9e\xe0\x2e\x9e\xaf\xe0\x7b\x12\xc3\x2a\x48\x27\xc1\xbc\x8a\xcf\xa5\x29\x3d\xcd\x1c\x3a\x14\x25\x10\xcf\x21\x57\x7e\x9e\xa8\x02\x35\x62\x47\x5e\xa3\xca\x3a\x8e\x66\x0f\xc5\x41\xf1\x73\xa0\xe0\x0b\x56\xf9\xc0\x11\x73\xf4\xbb\x30\x1f\x6f\xbe\x08\x15\x22\x4c\xe8\xf5\xcf\x64\x5d\x54\x01\x00\x0d\xe4\x49\x28\x62\x0a\xb3\xd2\x7c\x9b\x2c\xc1\x4b\x0c\xf8\xec\x25\xfd\xee\x77\x7f\x49\xa4\xc1\xbb\x04\x18\xf1\x49\x34\x6a\x24\x1d\xb7\xc6\xc7\xe5\x3a\x19\x1e\x89\x26\x81\x6e\x22\xc9\xc2\x7a\x7a\x57\xc0\x76\xa6\xcc\xcc\x3c\xcd\xec\x6f\x8e\xb7\x1d\x57\x89\x8b\x42\xc8\x7e\x52\x61\x74\x39\x2f\x9d\x04\x85\x05\xe0\xcf\xea\x4d\xf0\x53\x99\xd9\xeb\x92\x5f\x16\xac\x34\xdf\x6c\xb2\x58\x8d\x7b\x74\xa7\x72\x8f\x22\xfd\x6a\xa9\x51\xd2\x5f\xe1\x62\xd9\x2d\x21\xcf\x96\x9c\x98\xed\x50\x9d\x48\xe6\xd6\x39\x8e\xf8\xc3\x68\x3c\xb8\x40\x35\xc7\xc6\x52\x1e\x76\x44\x6e\x6c\x77\x62\xed\x2b\x06\xbe\x5d\x8a\x45\xb4\x5d\xef\x8d\xbc\x96\x03\x3a\x47\x2e\xe7\x27\x7e\x99\x95\xec\x49\x3e\xba\x79\xac\x60\x2b\x69\xb3\xde\xd6\xb2\xad\x37\x1b\xb9\x2e\x37\xb4\xd9\x62\xd9\xd2\x12\x69\xbd\xbd\x6d\x6f\xb6\x59\x48\xc0\xd3\xd1\x0f\x4a\xb5\x8a\x5c\x22\x66\x67\x71\xea\x01\x75\x03\x07\x52\x5d\xcf\x0e\x9c\x99\xad\x24\xcf\xd5\x1a\x1d\x85\xd2\x33\x88\x38\x31\x21\xf7\xff\x73\x23\x5a\x6b\x7e\x90\x16\x4a\xa7\x45\x23\x42\x26\xf9\xe4\x85\xaf\x9c\xf0\x22\x56\xfb\xb4\xe7\x5b\x1c\x9c\x17\x87\x6a\x03\x07\xaf\x3c\x4d\xe2\x4a\x3d\x96\xe2\xb7\x2d\x82\xff\x60\x03\xa8\x21\xb9\x07\xef\x45\x40\x9e\x0b\xbd\xec\x4a\xfc\x47\x08\xd7\x90\x36\x4c\xfe\x3b\x79\xb5\x6a\xa0\xf0\x43\xed\x8e\xcc\x7c\xdd\xd4\x83\xe2\x5e\xc5\x54\xce\x57\xc6\xab\xce\x53\xac\x4b\x5c\x36\xe5\x7a\x53\x2e\x6f\xb7\xcd\xa7\xb2\x5c\xaf\xb6\xcb\x72\x59\x62\x5d\xcb\x15\x6d\x3e\x7d\xcc\x90\xd9\xaa\x7a\xe6\xb8\x7b\xe9\x89\x2d\xa6\x31\x9e\x2d\x19\xc0\xa3\xd2\x4d\x05\xbb\xfb\xfb\x54\x92\x3f\xfb\xd4\x34\xcd\x16\x07\xd0\xc4\xe1\x51\xf0\x7e\x77\x7f\x7f\x05\x7f\xf8\x3f\x79\x9e\x7f\xf0\x4a\xf5\x03\x50\xba\x13\xe9\x07\xa6\x82\xf8\x58\x01\xff\x58\x59\x95\xe1\x51\x91\x4c\xa7\x9f\xfa\xf0\x08\x49\x7e\x99\x57\x96\x56\x2d\x39\x16\x38\x73\x6f\x6c\x05\xbb\x9e\x74\x07\x77\x2a\xfb\x37\x00\x00\xff\xff\x06\x7c\x0f\x79\x14\x09\x00\x00"

func deeplabv3_mobilenetv2_pascal_vocYmlBytes() ([]byte, error) {
	return bindataRead(
		_deeplabv3_mobilenetv2_pascal_vocYml,
		"DeepLabv3_MobileNetv2_PASCAL_VOC.yml",
	)
}

func deeplabv3_mobilenetv2_pascal_vocYml() (*asset, error) {
	bytes, err := deeplabv3_mobilenetv2_pascal_vocYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DeepLabv3_MobileNetv2_PASCAL_VOC.yml", size: 2324, mode: os.FileMode(420), modTime: time.Unix(1553820924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faster_rcnn_resnet50_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x38\x0f\xbe\xfb\x57\x10\xc8\x61\x66\x80\xd6\xce\xf7\xb8\x3e\xbc\xc0\x8b\x2c\xe6\x34\x48\x81\x62\x77\xaf\x86\x2c\xd3\xb6\xb6\xb6\x64\x88\x74\x93\xf6\xd7\x2f\xf4\x51\x27\x41\x7b\xe8\x5e\x02\xc9\x7c\x48\x3d\x24\x1f\x4a\xd1\x62\xc0\x02\x7e\x09\x62\xb4\xe5\xd3\xe1\x78\x2c\x9f\x90\x8e\xc8\xbb\x65\x79\x78\x3c\x3c\xc2\x02\x1c\x02\x4c\x03\xaf\x66\xb2\x30\x98\x1a\xfb\xa4\xb1\x62\xc0\x93\xb1\xcf\x45\x02\x10\x22\xfc\x89\x9a\x8c\xfd\xd5\x9b\x13\x2c\x60\xb6\x43\x63\x2c\x70\x87\xd1\x0f\xe0\x05\x2d\x29\xa3\x0b\x58\xa5\xab\xf5\x0d\x32\x5a\x40\x1a\xcd\x56\x28\xcd\xc9\x15\x76\x09\x8b\x19\xa0\x74\x63\xec\x20\x38\xac\x81\x70\x10\x9a\x95\x9c\xed\xc1\x9a\xb8\x38\x42\x69\xb4\x05\x2c\x60\xde\x10\x4c\x84\x35\xb0\x81\x11\xad\x43\x06\x66\x80\x2f\xa2\x9f\x7c\xcc\x04\x40\x0c\xf5\x7e\xeb\x52\x03\x68\xc7\xa9\x00\x2b\xd4\x68\xcd\x3f\x28\x39\x93\xc2\x0e\xfd\x3d\xfb\x64\x9b\xde\x9c\x0a\x8f\xbd\x97\xe3\xe4\xe1\xf2\x6b\xf0\xd6\xc3\xc7\x51\xee\xb7\x3d\x16\x5f\xf3\x8c\xe8\xe8\xfb\x05\x66\xd7\x0e\x35\x92\xb4\x6a\x64\x5f\xce\xff\x25\x70\xdd\xae\xc7\xca\xf9\xc3\x1f\xc8\x28\x7d\x51\x7d\x45\xee\xe0\xd4\x29\xd9\x81\x22\xf0\xed\xc0\x1a\x8c\xf6\xad\xf4\xb2\xf8\x7e\x30\xc3\x60\x74\x74\x26\xd7\x88\x83\xd1\x8c\x67\xfe\x01\xb5\x60\x41\xc8\x69\x02\xf0\x17\x21\x34\x41\x5b\x56\x6a\x5d\x5a\x24\xed\xb5\x25\x8d\x34\xe5\x7a\xb9\xca\xcb\xe5\xaa\x5c\xe7\xd0\x58\x33\x5c\x93\xaa\x6f\xd9\xc0\x9b\x31\x69\x62\xb1\x41\x8b\x5a\x22\xb9\x9e\x5e\x76\xbe\x9d\x62\x74\xdd\xcd\xe0\x84\x15\x29\x46\xb7\x44\x96\x69\x0a\x21\xf7\x4a\xe9\xf6\x46\x89\xf7\xd0\x31\x8f\x54\x64\x59\xab\xb8\x9b\xaa\x54\x9a\x21\xbb\x94\x2f\xf3\x38\xca\xaa\xde\x54\xd9\xe0\x53\xc8\x2c\x12\x0a\x2b\xbb\xcc\xf8\xac\xcb\x99\x64\xd6\x6e\x6a\x23\xb3\x79\x5f\x7a\xe7\xd2\x91\x1e\xea\xa4\x57\x12\x35\x61\x01\xff\x1f\x85\xec\x10\x7e\x87\xfd\x1d\xfc\x1d\x15\xbb\xf6\xfa\x8e\x30\x37\x6a\x17\x9e\x4a\x8f\x13\xfb\x74\x43\x1d\xc2\xde\xd3\xe7\xd7\x11\x0b\x50\x83\x68\xd1\x0d\x92\xb2\xc4\xc1\xec\xa0\xa2\x57\xfc\xea\x75\x72\xd3\x7a\x17\x38\x60\xde\xfd\xae\xcc\xef\x27\x5f\x85\xf2\x11\x46\xe1\x86\x94\xd1\x52\x90\x2a\x00\xf6\x38\xa0\xe6\x32\x50\x98\x94\xe6\x3c\x5a\xbc\x57\xd9\x8b\x57\x37\x77\xdf\xfc\x21\x65\x28\xea\xb7\xc4\x4c\x3c\x4e\xec\x62\x04\xbf\xca\x4c\xba\x56\xba\xad\xcc\x39\xf9\x84\x67\x80\xcf\x28\xa8\xcc\x19\x16\x20\x3e\x63\x1c\xa1\x33\xd1\xe4\x23\xe9\x5b\xca\x4d\x6f\x04\x6f\xd6\xde\x52\x99\x33\xd2\x4c\xf9\xd2\x43\xff\xfd\x5b\xa8\x80\x35\x95\xa8\x54\xaf\x58\x7d\x0a\x25\x69\xec\x3b\x56\xf6\x82\xe8\x53\x54\xb4\x04\x58\x83\x82\x27\x8b\x54\x4e\xb6\x2f\x66\x29\xd2\x26\x15\x83\x78\x33\x5a\x9c\xc8\x0b\x92\xd8\x58\x4c\xfd\x6c\xa7\xc6\xb6\x19\xbd\x6a\x42\xa6\xcc\xcd\x4f\xd6\x8b\x0a\x7b\x4a\xf9\xcc\xb7\x21\x65\x87\xf2\x99\xa6\xa1\x80\xed\x76\x95\xcb\x7c\x57\x2f\x57\xb8\x97\xf9\xba\x69\xf6\xf9\xf6\xa1\xca\xd7\x9b\x87\x9f\xbb\x87\xed\x26\x4f\xbc\xaa\x9c\xbc\x68\x44\xa9\x1a\x85\x14\x85\xd6\x5a\x31\x76\x20\x74\x0d\x27\x54\x6d\xc7\x04\x64\x26\x2b\xd1\x69\xaf\x12\x84\x9e\x77\x02\x01\x57\x8e\x82\xbb\xff\x90\x45\x9c\xad\x8f\xd3\xf6\x95\xbb\x22\x6b\xac\x79\x43\x5d\x2a\x1d\xe7\xbf\xf4\x1c\xd2\xb1\x4a\x00\x14\x95\x6e\x42\xd5\x4b\xbc\x56\x1b\xd1\x93\x93\xb9\x6a\x80\xed\x84\x77\x4e\x2e\xe1\x1a\x7b\x4f\xc2\xdd\x70\x02\xdc\x82\x0d\x08\x0d\xd1\xdd\x7b\x2f\x3c\xf2\x92\xe2\x75\x3d\xc2\x07\x1f\xae\x46\x6d\x18\xdd\x3a\x7a\x35\xaa\x47\xff\x2e\xd2\xbb\x42\x3f\x96\xf3\xa4\xb8\x53\x81\xca\xe5\xc8\x70\xd4\xa5\x7f\x79\xb5\xc7\x1a\xab\xd5\x76\xb3\xdb\xef\x9b\x7c\xb3\xc4\xcd\xee\xe7\x7e\xb7\xdd\xe4\xd5\x76\xb7\x6e\x9a\x44\x30\x5b\x55\x4d\x1c\xae\x44\x3c\xb3\x15\xb1\x81\x17\x4b\x02\xf0\xac\x74\x5d\xc0\xe1\x78\x8c\x29\xb9\xbd\xa3\xa6\x71\xb2\xa2\x07\x8d\xec\xdf\xe0\xef\x87\xe3\xf1\x0e\x9e\xdc\x4f\x9a\xa6\x3f\xdc\xa4\xba\xbb\x5f\xe9\xb6\x8c\x97\x7a\x01\xf1\x5f\x41\xdc\xcf\xcf\xa9\x7f\xe8\x23\x38\x01\x18\x84\x56\x0d\x12\x97\x62\xe2\xce\xd8\x02\x0e\x1d\xea\x16\x7e\xab\xe4\xdf\x00\x00\x00\xff\xff\x41\x55\x29\xa7\x71\x08\x00\x00"

func faster_rcnn_resnet50_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_faster_rcnn_resnet50_cocoYml,
		"Faster_RCNN_ResNet50_COCO.yml",
	)
}

func faster_rcnn_resnet50_cocoYml() (*asset, error) {
	bytes, err := faster_rcnn_resnet50_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Faster_RCNN_ResNet50_COCO.yml", size: 2161, mode: os.FileMode(420), modTime: time.Unix(1553755443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mask_rcnn_inception_v2_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4b\x6f\xe3\x38\x0c\xbe\xfb\x57\x10\xc8\xa1\x33\x40\x6b\x37\x8f\x69\x53\x1f\x16\x58\x04\x58\x60\x80\xd9\x14\x98\x7d\x5c\x0d\x5a\xa6\x6d\x6d\x6d\xc9\x10\xe9\xa6\xed\xaf\x5f\xe8\xd1\x24\x45\x7b\xe8\x5c\x02\xc9\xfc\x48\x7d\x24\x3f\x4a\x31\x38\x52\x09\x7f\x22\x3f\x54\x3f\x77\xfb\x7d\xf5\xdd\x28\x9a\x44\x5b\x53\x3d\xae\xaa\xdd\xfd\xee\x1e\x16\xe0\x31\x60\x5b\x78\xb6\xb3\x83\xd1\x36\x34\x64\xad\xc3\x91\x0e\xd6\x3d\x94\x19\x40\x8c\xf1\x37\x19\xb6\xee\x8f\xc1\x1e\x60\x01\x47\x3b\xb4\xd6\x81\xf4\x94\xfc\x00\x1e\xc9\xb1\xb6\xa6\x84\x65\xbe\x5c\xbd\x41\x26\x0b\x28\x6b\xc4\xa1\x36\x92\x9d\x61\xaf\x61\x71\x04\x68\xd3\x5a\x37\xa2\xc4\x35\x30\x8d\x68\x44\xab\xa3\x3d\x5a\x33\x1f\x07\xb5\x21\x57\xc2\x02\x8e\x1b\x86\x99\xa9\x01\xb1\x30\x91\xf3\xc8\xc8\x0c\xe8\x11\x87\x39\xc4\xcc\x00\x70\x6c\x6e\x36\x3e\x35\x80\x6e\x9a\x4b\x70\xa8\x27\x67\xff\x23\x25\x85\x42\x37\x0e\x57\x12\x92\x6d\x07\x7b\x28\x03\xf6\x4a\x4d\x73\x80\xab\xcf\xc1\xbb\x00\x9f\x26\x75\xb3\x19\xa8\xfc\x9c\x67\x42\x27\xdf\x4f\x30\x3b\x77\x68\x88\x95\xd3\xa1\xb3\x25\xfc\x96\xc1\x79\xbb\xbe\x1b\x16\x34\x8a\xe0\x2f\xea\x46\x32\x12\x2b\x1b\xca\x72\x09\x87\x5e\xab\x1e\x34\x43\xe8\x09\x35\x60\x4d\xe8\x67\xd0\xc6\x97\x9d\x1d\x47\x6b\xe0\xbe\xf6\x0c\xd8\x77\x63\x67\x8d\xd0\x93\x7c\x85\x06\x05\x99\x24\xcf\x00\xfe\x61\x82\xd1\x4b\xcc\x29\x63\x2a\x7d\x2e\x31\x65\x95\xad\x56\xd7\xcb\x6d\x75\xbd\xac\x56\x5b\x68\x9d\x1d\xcf\xb9\x35\x24\xa4\x4e\x7c\xe0\xc5\xda\x3c\x73\xd4\x92\x23\xa3\x88\x7d\x6b\x4f\xbb\xd0\x55\x9c\x7c\x93\x0b\x38\x50\xcd\x5a\xc8\x2f\x49\x54\x9e\x43\x2c\x41\xad\x4d\xf7\x46\x90\x57\xd0\x8b\x4c\x5c\x16\x45\xa7\xa5\x9f\xeb\x5c\xd9\xb1\x38\x55\xb1\x08\x38\x2e\xea\xc1\xd6\xc5\x88\x2c\xe4\x0a\x47\x4c\xe8\x54\x5f\xd8\x90\x77\x75\x24\x59\x74\xeb\xc6\xaa\xe2\xb8\xaf\x82\x73\xe5\x49\x8f\x4d\x36\x68\x45\x86\xa9\x84\xdf\x27\x54\x3d\xc1\x8f\xb8\xbf\x84\x7f\x93\x70\x57\x41\xe6\x09\xe6\x27\xee\xc4\x53\x9b\x69\x96\x90\x6e\xac\x43\xdc\x07\xfa\xf2\x3c\x51\x09\x7a\xc4\x8e\xfc\x3c\x69\xc7\x12\xcd\x1e\x8a\x83\x96\xe7\x20\x97\x37\x0a\xf0\x81\x23\xe6\xd5\xef\xcc\xfc\x7a\xf2\x59\xa8\x10\x61\x42\x3f\xab\x42\x8e\xa3\x62\x01\x68\x20\x2f\x98\x2a\x52\x98\xb5\x91\x6d\xb2\x04\xaf\x6a\xc0\x67\x3f\x7e\x17\xe1\x90\x2a\x16\xf5\x22\xb3\xb3\x4c\xb3\xf8\x18\x89\x7a\xd2\x1f\x47\xf9\x65\x1f\x70\x8d\x2e\x47\x24\x24\x28\x2c\x00\x3f\x62\x9e\xe0\x47\xc2\xd9\x7b\xf2\x6f\xa9\xb7\x83\x45\x59\xaf\x82\xa5\xb6\x4f\xc4\x47\xea\xa7\x5e\x86\xef\x17\xb1\x12\xce\xd6\x58\xeb\x41\x8b\xfe\x10\xca\xca\xba\x57\xac\x1a\x90\xf9\x43\x54\xb2\x44\x98\x9f\x8f\x8f\x40\xe1\x7b\x84\xb4\x84\x32\x3b\xe2\x6a\x76\x43\x79\x54\x2d\xaf\x73\x1c\xf1\xc5\x1a\x3c\x70\xd0\x2e\x8b\x75\x94\x87\xdb\x20\xb7\xae\x2b\xf8\xd9\x30\x09\x17\x7e\xd4\x8a\x01\x6b\x1a\x38\x97\x27\x79\x1b\x52\xf5\xa4\x1e\x78\x1e\x4b\xd8\x6c\x96\x5b\xb5\xfd\xd6\x5c\x2f\xe9\x46\x6d\x57\x6d\x7b\xb3\xdd\xdc\xd5\xdb\xd5\xfa\xee\xf6\xdb\xdd\x66\xbd\xcd\x82\x00\xbd\x12\x79\x22\xa5\x5b\x4d\x9c\x34\xd9\x39\x9c\x7a\x40\xd3\xc0\x81\x74\xd7\x0b\x03\xdb\xd9\x29\xf2\x32\xad\x91\x29\xf0\xce\x20\xe2\xaa\x09\xa5\xff\x85\x2c\xd2\x18\xbe\x1f\xcc\xcf\x5d\x2c\x45\xeb\xec\x0b\x79\x4c\xba\x2c\xaa\xc0\x22\x9f\xea\x0c\x40\x73\xe5\xc7\x59\x3f\xa6\xab\xb8\xc5\x81\xfd\x4c\xe8\x16\xc4\xcd\x74\xe9\x35\x15\x6f\xbd\xd7\x34\xfc\x85\x88\xe0\x17\x62\x01\x0d\x24\xf7\xe0\xbd\x08\xc8\x53\x92\xe7\x15\x89\x1f\x42\xb8\x86\x8c\x15\xf2\xeb\xe4\xd5\xea\x81\xc2\x5b\xca\xaf\x32\x7e\x5f\xd0\x83\x96\x5e\x47\x2a\xa7\x23\xe3\x51\xa7\x0e\xd6\x9b\x5b\xda\x6c\xd6\xf5\x7a\xb9\xc6\xdb\xeb\x3b\xda\xa8\xf5\x9d\x5a\x2a\x24\xc4\x35\xa9\x7a\x9d\xa1\x88\xd3\xf5\x2c\xf1\xfe\xa4\x27\x71\x98\x5a\x78\xb2\x64\x00\x0f\xda\x34\x25\xec\xf6\xfb\x94\x92\xdf\x7b\x6a\x86\x66\x87\x03\x18\x92\xf0\x6e\x7f\xd9\xed\xf7\x97\xf0\xd3\xff\xe4\x79\xfe\xd5\x8f\xb5\x7f\x2a\xb4\xe9\xaa\xf4\x06\x94\x90\xfe\x49\xa4\xfd\xf1\x09\x0e\x7f\x0e\x12\x38\xf3\x33\x60\x74\x4b\x2c\x15\xce\xd2\x5b\x57\xc2\xae\x27\xd3\xc1\x0f\x9d\xfd\x1f\x00\x00\xff\xff\xf0\xf1\xff\x9e\xa7\x08\x00\x00"

func mask_rcnn_inception_v2_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_mask_rcnn_inception_v2_cocoYml,
		"Mask_RCNN_Inception_v2_COCO.yml",
	)
}

func mask_rcnn_inception_v2_cocoYml() (*asset, error) {
	bytes, err := mask_rcnn_inception_v2_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Mask_RCNN_Inception_v2_COCO.yml", size: 2215, mode: os.FileMode(420), modTime: time.Unix(1553755448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_10_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xe3\x36\x13\xbe\xeb\x57\x0c\xe0\x43\xde\x17\x88\x25\xcb\x71\x6c\x47\x87\x1e\x9a\xa2\x1f\x40\x37\x28\x16\x8b\xf6\xb0\x28\x84\x11\x39\xb2\xd8\x48\x24\x41\x8e\xe2\x75\x7e\x7d\x41\x4a\xb2\x6c\x64\x17\x4d\x7b\x11\xc4\x99\x67\x86\xc3\x87\xf3\x41\x8d\x1d\x15\xf0\xc1\x54\xaa\xa5\x27\xe2\xf2\x25\x2f\xf3\x74\x55\xae\xd7\x1b\x58\x40\x50\x82\xa9\xe1\x64\x7a\x07\x9d\x91\xd4\x26\xb5\xc3\x8e\x8e\xc6\x3d\x17\x09\xc0\x60\xfc\x89\xb4\x37\xee\xc7\xd6\x1c\x61\x01\x67\x3d\xd4\xc6\x01\x37\x34\xda\x01\xbc\x90\xf3\xca\xe8\x02\xf2\x34\x5f\x5f\x21\x47\x0d\x08\xa3\xd9\xa1\xd2\x9c\x5c\x60\x57\xb0\x38\x03\x94\xae\x8d\xeb\x90\x87\x7f\xf0\xd4\xa1\x66\x25\xce\xfa\x41\x9b\x04\x3f\xa8\x34\xb9\x02\x16\x70\x5e\x78\xe8\x3d\x49\x60\x03\x96\x5c\x40\x0e\x91\x81\x75\x24\x95\x08\x3e\x13\x80\x05\x74\x7d\xcb\xca\xb6\x04\xb6\x45\x0e\x30\x0f\x02\x35\x54\x04\xde\x92\x50\xb5\x22\x99\x00\x60\x27\xb7\x9b\x40\x01\xc0\xc1\xf6\x05\x38\x54\xd6\x99\xbf\x48\x70\x26\xd0\x75\xed\x92\x23\x29\x75\x6b\x8e\x45\xc4\x2e\x85\xed\x23\x5c\xbc\x0f\x7e\x88\x70\x6b\xc5\x76\xd3\x52\xf1\x3e\xcb\x11\x3d\xda\xbe\x23\xb2\x4b\x03\x49\x5e\x38\x65\x39\xd2\xfe\x5d\x02\x73\x4e\x80\xf2\x80\x70\x20\x4d\x0e\x5b\x40\x27\x1a\xc5\x24\xb8\x77\x04\xa8\xe5\xc4\x4e\x24\x37\xdc\xf9\x99\xc0\xde\x13\x08\xf4\xe4\xd3\x04\xe0\x07\xb2\xa4\xa5\xd2\x07\x30\x3a\xa6\xc5\xa4\xbd\x05\xc5\xd1\x47\x10\x48\x55\xd7\xe4\x48\x33\x28\x6d\x7b\x86\x16\x4f\xe4\xc0\xab\xd7\x61\xab\x59\x7d\x54\x92\x1b\xa8\x51\xb0\x71\xd1\xff\xa7\x26\x44\xd9\xb6\xe6\xe8\xdf\xc0\xe2\x3d\xfb\x70\xf3\x8e\x64\x2f\x28\xee\xaf\xfb\xae\x22\x17\xb2\x7b\x0c\xf8\xb4\x44\x29\x7d\xdc\x87\x1b\x72\x54\x9d\x12\x98\x0c\x94\x8e\x0e\x05\x81\x30\x9e\xc3\x11\xba\xc8\x0e\x48\x7a\x51\x82\xe6\x08\x34\x71\x4c\x69\x61\xb4\x57\x9e\x7d\xf0\x1f\x6a\x29\x1e\x64\x70\x8e\xa2\x51\xf4\x42\x1e\x76\xab\xf4\x01\xd8\xd8\x65\x1e\xe5\xfb\x87\x71\x79\x0f\x28\x44\xef\x50\x9c\xd2\xc4\xd1\xb8\xb1\x0f\xb9\x3c\xaf\x62\x1a\xa3\x0d\x3e\x33\x38\x52\xe5\x15\x53\xf8\x25\x16\x69\x0a\xc3\x5d\x56\x81\xed\xcb\x0a\x5c\x42\xc3\x6c\x7d\x91\x65\x07\xc5\x4d\x5f\xa5\xc2\x74\xd9\x9c\x0e\xd9\xc0\x53\x56\xb5\xa6\xca\x3a\xf4\x4c\x2e\x73\xe4\x29\xdc\x78\xe6\x5b\xd5\x65\x9a\xd8\x67\xc3\xc9\x75\xec\x15\x69\x27\xcf\x7e\x8b\x2c\x93\xe6\xa8\x5b\x83\x32\x9d\x9d\xa6\xc6\x1d\x26\xc7\x97\x96\xe5\x7a\x95\xef\xcb\xd5\xbe\x5c\xad\xaf\xe5\x63\xf7\x49\xf9\xf0\x7a\x15\x32\xba\x2f\xea\x25\x7a\xb3\xb2\xce\xf2\xdd\x6a\x93\xae\x36\xfb\x6d\x9e\x5a\x59\x7f\xeb\x6c\xcf\xe4\xd0\x2f\x99\x70\xfa\x45\x6b\x5b\x25\x62\x03\xb9\x3e\x67\x54\x97\x57\xea\x73\x54\xa9\x3d\x25\x0b\x68\x95\x20\xed\x63\x3b\x9c\x39\x1d\x85\x05\xf4\xda\x91\x67\xa7\x04\x93\x4c\x16\x43\xf6\xc6\x4b\x9a\xb1\x83\xac\x88\x4d\xa6\x56\xce\x4f\x39\xce\x27\x4b\x6f\x9a\xe5\x32\x8a\x0b\x50\x1d\x1e\x28\x16\xf3\x02\x2e\x2a\x74\x8a\xe2\xc2\x4f\x04\x5d\x15\x71\x00\x0c\x5b\xcc\x5e\x2c\x86\xae\xcb\xe4\x62\x3e\xc5\xad\x67\x51\x44\x00\x50\x4b\x1d\x69\x2e\x87\x08\xea\xd6\x20\xdf\xad\x47\x5d\xf4\x57\xc6\x6c\x2e\xe0\x26\xae\x6e\x46\x55\x8b\x27\xd3\x73\x01\x37\x3f\xff\xf1\x38\xc9\x84\x69\x8d\x2b\xc3\xa1\x0a\xb8\xf9\xf8\xd3\xf7\x93\x5c\xaa\x8e\x74\x68\xd9\xbe\x80\xcf\x77\xb7\xa1\x44\xe2\xe7\xcf\x51\xdf\x11\xea\x02\x3e\xe7\xeb\xfd\x2d\x4c\x9f\x49\xe7\x05\xb6\x54\x04\x49\x62\x7a\xb6\x3d\x0f\x94\x86\xd3\xc6\xf3\x8c\xd4\x0c\xba\x04\x46\x22\x45\x8b\xde\xab\x7a\xbc\xdd\x68\x81\x5f\x63\x74\x30\x9b\x49\x49\xbe\x42\xea\x88\x69\xb1\x8a\x77\xf5\xcf\x9c\x7e\x9b\x51\xeb\x4c\x85\x95\x6a\x15\x2b\xf2\x67\x5e\x3f\x4c\xa9\xf7\x7b\x9e\xfd\x76\x1e\x4f\x3e\xfb\x48\xbe\x41\x4b\x65\x3e\xf0\x58\x13\x86\x2e\xec\xcb\xde\xb5\xc5\x39\xff\xfd\x5d\x8a\x1d\xbe\x1a\x8d\x47\x1f\xab\xc0\xb3\x71\x94\xc6\xe6\x1f\xeb\xc7\x9f\xb4\x0f\x85\x1c\xb3\x42\x13\x8f\x82\x3c\xe5\x2f\x7c\xed\x57\x34\x24\x9e\x7d\xdf\x15\xb0\x15\xab\xfb\xd5\xfe\xee\xe1\x21\x5f\xaf\x76\x92\xf0\x5e\xdc\xed\xea\xb5\x5c\xef\xf2\x55\xbe\xa9\x51\x26\x31\x71\xc3\xf9\xa7\x29\xe9\xc7\xf1\x7a\x70\x68\x9b\xd8\xe0\x8e\xa4\x0e\x0d\x7b\x70\xe4\x4d\xef\x04\x05\x6e\x2a\xf4\xf4\x2f\xc3\x1f\x9b\xc9\xdb\xbe\xf5\x1f\xda\x4b\x0c\xae\xb4\xc8\x4d\x01\x5f\x83\x95\xb5\x33\xaf\xa4\x53\x5b\x9d\xc1\x33\x27\xbb\xfa\x7e\xbb\x11\xbb\xfd\xba\x5e\xe5\x9b\x9c\x36\xb4\xab\xa4\xb8\xcf\xb7\x39\x6e\x85\x58\xd7\x9b\x04\x40\xf9\x32\xce\xcb\x97\x71\x84\xb3\xeb\x09\x16\xa0\xea\xf8\x77\x1b\xb2\x69\x98\x86\x13\x0f\xc3\xac\x0d\x3f\x6c\x00\x35\x8c\xd6\x63\x07\x08\xc8\x39\xe4\x4b\x52\x07\x41\x74\x27\x49\x1b\x8e\x33\x6e\xb4\xaa\xc3\xa0\x0a\x4f\x35\x3f\x25\xf9\xdb\x3b\x39\x2a\x6e\xd4\x10\xca\xb4\x25\x32\x3b\x55\xf5\x3c\x8c\x1e\xfa\xc2\x0e\xcf\xe3\x6d\xd6\x25\x00\xcf\x4a\xcb\x02\x1e\x9f\x9e\xc6\x08\xc3\x3a\xec\xa4\xa9\x0f\x0f\x86\xc9\xe6\x7f\x8f\x4f\x4f\xb7\xf0\x31\x7c\xd2\x34\xfd\x7f\xa8\xcc\xf0\xd8\x53\xfa\x50\x4a\x64\xf4\xc4\x05\xfc\x12\x52\x32\x3c\x39\x16\x30\xca\xce\x8f\xb6\xd8\x21\x47\x83\x04\xa0\x43\xad\x6a\xf2\x5c\x62\xcf\x8d\x71\x05\x3c\x36\xa4\x0f\xf0\xab\x4a\xfe\x0e\x00\x00\xff\xff\x4a\xde\x2a\xd1\xd2\x0a\x00\x00"

func mobilenet_v1_10_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_10_224Yml,
		"MobileNet_v1_1.0_224.yml",
	)
}

func mobilenet_v1_10_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_10_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_1.0_224.yml", size: 2770, mode: os.FileMode(420), modTime: time.Unix(1553819496, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srganYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\xe0\x43\x5a\xc0\x2b\xf9\xb5\x76\x56\x87\x02\xc1\xf6\x81\xa0\x0b\x1f\xd2\x34\x97\x22\x10\x46\xd4\x48\x62\x57\x22\x09\x72\xb4\xce\xee\xaf\x2f\xf8\xb0\xec\x45\x72\xd8\x5e\x6c\x91\xf3\xcd\xe3\x9b\xf9\x48\x2a\x1c\xa9\x84\xbf\x3e\xfd\xf1\xe1\x08\x0b\xf0\x2b\xd0\x2d\x3c\xeb\xc9\xc2\xa8\x1b\x1a\xb2\xd6\xe2\x48\x27\x6d\x1f\xcb\x0c\x20\xa2\x3f\x93\x72\xda\xfe\x3e\xe8\x13\x2c\x60\xb6\x43\xab\x2d\x70\x4f\xc9\x0f\xe0\x89\xac\x93\x5a\x95\xb0\xce\xd7\x9b\x57\xc8\x64\x01\xa1\x15\x5b\x94\x8a\xb3\x2b\xec\x0a\x16\x33\x40\xaa\x56\xdb\x11\x39\x7e\x83\xa3\x11\x15\x4b\x31\xdb\xa3\x35\xf3\x71\x50\x2a\xb2\x25\x2c\x60\x5e\x38\x98\x1c\x35\xc0\x1a\x0c\x59\x8f\x8c\x95\x01\x3d\xe1\x30\x85\x98\x19\x00\x8e\xcd\x7e\xe7\xa9\x01\x74\x66\x2a\xc1\xa2\x34\x56\xff\x4b\x82\x0b\x81\x76\x1c\x6e\x38\x90\x6d\x07\x7d\x2a\x03\xf6\x46\x98\x29\xc0\xc5\xdb\xe0\x5d\x80\x1b\x23\xf6\xbb\x81\xca\xb7\x79\x26\x74\xf2\x7d\x43\x65\xd7\x0e\x0d\x39\x61\xa5\xe1\xd0\xce\x5f\x32\xb8\x1e\xd7\xc7\x11\x3b\x82\xdf\x54\x8f\x4a\xd0\x48\x8a\x63\x4b\x96\x70\xea\xa5\xe8\x41\x3a\x08\xf3\xa0\x06\xb4\x82\x5f\x3f\x7e\xd9\xfc\x09\x37\x50\x4b\x31\xd5\x52\x40\xa3\x4f\xca\x09\x1c\xa4\xea\xe0\xdb\x0e\x84\x1e\x0d\xb1\xf4\x79\xf2\x0c\xe0\x6f\x47\x49\x46\x96\x06\x42\x47\xb0\xce\x37\xf9\x0a\x5a\xab\xc7\x54\xc2\x03\x3e\x93\x9d\x41\x46\xe7\x99\xa5\x96\x2c\x29\x41\xce\x4f\xee\xb2\x0a\x43\x43\xe3\x67\x58\xc0\x89\x6a\x27\x99\xfc\x27\xb1\xc8\x73\x88\x0c\x6b\x5f\xc7\xb5\xde\x6e\xa0\x67\x36\xae\x2c\x8a\x4e\x72\x3f\xd5\xb9\xd0\x63\x11\x9b\x34\xf8\xcc\x85\xb3\x1d\xaa\x37\x03\x8b\xc4\xc3\x15\x9e\xf8\xa0\xb1\x29\x02\xa3\xa2\xab\x82\x3d\x57\xe6\x25\x1b\xa4\x20\xe5\xa8\x84\x0f\x06\x45\x4f\xf0\x10\xd7\x4b\xf8\x92\x14\xba\x09\x7a\x4e\x30\x7f\xb4\x2e\x15\x4b\x65\x26\x0e\xc4\xa3\x2e\xe3\x3a\xd4\xc7\xcf\x86\x4a\x90\x61\x5a\x0b\x68\xa5\x75\x1c\xcd\x1e\x8a\x83\xe4\xe7\xa0\x8b\x57\xa3\xf6\x81\x23\xe6\xec\x77\x65\x3e\x67\xbe\x0a\x15\x22\x18\xf4\x87\x92\xc9\xba\x28\x4d\x00\x1a\x82\x30\xaa\x58\x42\x3b\x68\xe4\xed\x26\xd9\x82\x5f\x15\x7a\x54\xc2\xbb\xb8\x0a\xc9\xde\x25\xc0\x48\xa8\x4a\xf8\x67\xbd\x39\xe4\xb7\x4b\xb8\xfe\xfb\x9a\x10\x5e\x40\x54\xc6\xbd\x4c\x4f\x6c\x26\xf6\x99\xaf\x08\x67\x3f\xe0\x15\x81\x33\x31\xfc\x11\xb5\x84\x99\x19\x65\xdf\xb3\x7b\xcd\x4d\x2a\xde\xef\xc2\xfe\x88\xee\xd1\xcd\xbc\x82\x40\xab\xae\xd0\x13\x17\x9f\x51\xf5\x91\x5c\x23\x47\x52\x7e\xa4\xce\x13\x5c\xc2\x76\x09\xeb\xed\xed\x7e\x09\x9b\xd5\x6e\xf5\x35\x0b\x23\xf4\xb3\x74\x86\x84\x6c\x25\xb9\x34\xd5\xce\xa2\xe9\x01\x55\x03\x27\x92\x5d\xcf\x0e\x9c\x9e\xac\x20\x3f\xe8\x1a\x1d\x55\x93\x1d\x7c\x75\x01\x57\x19\xe4\xbe\x9c\xe5\xe9\xb6\x39\x8e\xf8\xa2\x15\x9e\x5c\x10\xa9\x63\x6d\x29\x0f\xc7\x3f\xd7\xb6\x2b\x42\x0a\x57\x5c\x6e\x82\xf3\x4e\x50\x68\xb5\xce\x37\x45\x6b\xf5\x0b\xa9\x2a\xec\xe7\xa6\xce\x00\xa4\xab\xd0\x8a\x5e\x3e\xa5\xeb\xa8\xc5\xc1\xf9\xae\xca\x16\xd8\x4e\xb4\xf4\xdd\x54\xa1\xa5\xe7\xfa\xfc\xc5\x80\xe0\x3f\x58\x03\x2a\x48\xee\xc1\x7b\x11\x90\x97\xea\xaf\xa9\xc6\x8d\x10\xae\x21\xa5\x99\xfc\x77\xf2\x6a\xe5\x40\xe1\x3d\x71\xe7\x01\x7e\xdf\xa9\x93\xe4\x5e\xc6\x52\x2e\x29\x63\x2a\xd1\x93\x78\x74\xd3\x58\xc2\x0e\xdb\xed\x01\xf7\x77\x87\xdb\xa6\xbe\xbd\x5b\xd7\x6d\xb3\x16\x87\xf7\x2b\xaa\xdf\xaf\xd6\x77\xed\xdd\x21\x43\x66\x2b\xeb\x89\xe3\x25\x43\xdf\xd8\x62\x9a\xcd\xc5\x92\x01\x3c\x4a\xd5\x94\x70\x7f\x3c\x26\x4a\x7e\xed\x4b\x53\x34\x59\x1c\x40\x11\x87\xb7\xeb\xa7\xfb\xe3\x71\x09\x9f\xfc\x4f\x9e\xe7\x3f\x7b\xed\xfa\x2b\x53\xaa\xae\x6a\x90\xd1\x11\x97\xff\xe3\xe6\xf4\xa7\x34\x7a\xcd\x8f\x55\x78\x46\x53\xc8\xcc\x6b\x53\xc9\x96\x1c\x57\x38\x71\xaf\x6d\x09\xf7\x3d\xa9\x0e\x1e\x64\xf6\x5f\x00\x00\x00\xff\xff\x5f\x83\x5f\x24\xbb\x07\x00\x00"

func srganYmlBytes() ([]byte, error) {
	return bindataRead(
		_srganYml,
		"SRGAN.yml",
	)
}

func srganYml() (*asset, error) {
	bytes, err := srganYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SRGAN.yml", size: 1979, mode: os.FileMode(420), modTime: time.Unix(1553826739, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v1_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\xe0\x43\x76\x81\x44\xf2\xd7\x26\xb2\x0e\x05\x0a\x2f\x7a\xda\x26\x40\xb7\xed\x55\x18\x51\x23\x89\x8d\x44\x0a\xe4\x28\x76\xf2\xeb\x0b\x7e\x58\xb6\x91\x00\x4d\x2f\x06\xa9\x79\x33\x7c\x33\xf3\x86\xb4\xc2\x81\x0a\xf8\xf9\xf3\x7b\xf9\xbb\xae\x64\x4f\x8f\xc4\xe5\xcb\xaa\xdc\x3f\xed\x9f\x60\x01\xce\x0a\xba\x81\x57\x3d\x19\x18\x74\x4d\x7d\xd2\x18\x1c\xe8\xa0\xcd\x73\x91\x00\x04\xef\x3f\x49\x59\x6d\x7e\xeb\xf5\x01\x16\x30\xdb\xa1\xd1\x06\xb8\xa3\xe8\x07\xf0\x42\xc6\x4a\xad\x0a\x58\xa5\xab\xf5\x15\x32\x5a\x40\x68\xc5\x06\xa5\xe2\xe4\x02\xbb\x84\xc5\x0c\x90\xaa\xd1\x66\x40\x0e\x6b\xb0\x34\xa0\x62\x29\x66\x7b\xb0\x26\x2e\x0e\x4a\x45\xa6\x80\x05\xcc\x1b\x0b\x93\xa5\x1a\x58\xc3\x48\xc6\x21\x03\x33\xa0\x17\xec\x27\x1f\x33\x01\xc0\xa1\xbe\xdf\xba\xd4\x00\xda\x71\x2a\xc0\xa0\x1c\x8d\xfe\x87\x04\x67\x02\xcd\xd0\xdf\xb1\x4f\xb6\xe9\xf5\xa1\xf0\xd8\x3b\x31\x4e\x1e\x2e\x3e\x07\x6f\x3d\x7c\x1c\xc5\xfd\xb6\xa7\xe2\x73\x9e\x11\x1d\x7d\x3f\xc1\xec\xd2\xa1\x26\x2b\x8c\x1c\xd9\x97\xf3\x97\x04\x2e\xdb\xf5\x54\x39\x7f\xf8\x4e\x4c\xc2\x17\xd5\x57\xe4\x16\x0e\x9d\x14\x1d\x48\x0b\xbe\x1d\x54\x83\x56\xbe\x95\x5e\x16\x5f\xf6\x7a\x18\xb4\x8a\xce\xd6\x35\x62\xaf\x15\xd3\x91\xbf\x42\x8d\x8c\x96\x38\x4d\x00\xfe\xb2\x04\xd6\xd6\xe5\xe0\x75\xa5\x82\xae\x84\x16\xba\x5c\x2f\x57\x79\xb9\x5c\x95\xeb\x1c\x1a\xa3\x87\x4b\x42\xf5\x35\x13\x78\xd3\x3a\x4d\x0c\x35\x64\x48\x09\xb2\xae\x9f\xe7\x9d\x6f\x25\x8e\xae\xb3\x19\x1c\xa8\xb2\x92\xc9\x2d\x89\x45\x9a\x42\xc8\xbb\x92\xaa\xbd\x52\xe1\x1d\x74\xcc\xa3\x2d\xb2\xac\x95\xdc\x4d\x55\x2a\xf4\x90\x9d\x4b\x97\x79\x9c\xcd\xaa\x5e\x57\xd9\x80\x96\xc9\x64\x86\x2c\xa1\x11\x5d\xa6\x7d\xc6\xe5\x4c\x32\x6b\x37\xb5\x16\xd9\xbc\x2f\xbd\x73\xe9\x48\x0f\x75\xd2\x4b\x41\xca\x52\x01\xbf\x8e\x28\x3a\x82\x1f\x61\x7f\x0b\x7f\x47\xb5\xae\xbd\xb6\x23\xcc\x8d\xd9\x99\xa7\x54\xe3\xc4\x3e\xdd\x50\x87\xb0\xf7\xf4\xf9\x75\xa4\x02\xe4\x80\x2d\xb9\x21\x92\xc6\x72\x30\x3b\x28\xf6\x92\x5f\xbd\x46\xae\xda\xee\x02\x07\xcc\xc9\xef\xc2\x7c\x3a\xf9\x22\x94\x8f\x30\xa2\x1b\x50\x26\x63\x83\x4c\x01\xa8\xa7\x81\x14\x97\x81\xc2\x24\x15\xe7\xd1\xe2\xbd\xca\x1e\x5f\xdd\xcc\xdd\xf8\x43\xca\x50\xd4\x9b\x44\x4f\x3c\x4e\xec\x62\x04\xbf\x4a\x4f\xaa\x96\xaa\xad\xf4\x31\xf9\x80\x67\x80\xcf\x28\xa8\xf4\x11\x16\x80\x1f\x31\x8e\xd0\x99\x68\xf2\x9e\xf4\x35\xe5\xa6\xd7\xc8\x9b\xb5\xb7\x54\xfa\x48\x76\xa6\x7c\xee\xa1\xff\x7e\x13\x2a\x60\x74\x85\x95\xec\x25\xcb\x0f\xa1\x56\x68\x73\xc2\x8a\x1e\xad\xfd\x10\x15\x2d\x01\xd6\x10\xf2\x64\xc8\x96\x93\xe9\x8b\x59\x8a\x76\x93\xe2\x80\x6f\x5a\xe1\xc1\x7a\x41\x5a\xd6\x86\x52\x3f\xd7\xa9\x36\x6d\x66\x5f\x95\x25\xb6\x99\x9b\x9f\xac\xc7\x8a\x7a\x9b\xf2\x91\xaf\x43\x8a\x8e\xc4\xb3\x9d\x86\x02\xb6\xdb\x55\x2e\xf2\x6f\xf5\x72\x45\xf7\x22\x5f\x37\xcd\x7d\xbe\xdd\x55\xf9\x7a\xb3\x7b\xf8\xb6\xdb\x6e\xf2\xc4\xab\xca\xc9\xcb\x8e\x24\x64\x23\xc9\x46\xa1\xb5\x06\xc7\x0e\x50\xd5\x70\x20\xd9\x76\x6c\xc1\xea\xc9\x08\x72\xda\xab\xd0\x92\xe7\x9d\x40\xc0\x95\x23\x72\xf7\x3f\xb2\x88\xb3\xf5\x7e\xda\xfe\xeb\x9e\xc8\x1a\xa3\xdf\x48\x95\x52\xc5\xd9\x2f\xfd\xf9\xe9\x58\x25\x00\xd2\x96\x6e\x3a\xe5\x4b\xbc\x4e\x1b\xec\xad\x93\xb8\x6c\x80\xcd\x44\xb7\x4e\x2a\xe1\xfa\x3a\x25\xe0\x6e\x36\x04\xb7\x60\x0d\xa8\x20\xba\x7b\xef\x85\x47\x9e\xd3\xbb\xac\x45\xf8\xe0\xc3\xd5\xa4\x34\x93\x5b\x47\xaf\x46\xf6\xe4\xdf\x43\x7b\x52\xe7\xfb\x52\x1e\x24\x77\x32\x50\x39\x1f\x19\x8e\x3a\xf7\x4e\xec\xea\x66\xb7\xcc\xf1\xe1\x61\xb7\xbc\x5f\x0b\x5a\x2e\xb1\xa2\xbc\xd9\xe5\xb4\xc5\x0d\x55\xab\x04\x99\x8d\xac\x26\x0e\xd7\x21\x1d\xd9\x60\x6c\xde\xd9\x92\x00\x3c\x4b\x55\x17\xb0\x7f\x7c\x8c\x29\xb9\xbd\xa3\xa6\x68\x32\xd8\x83\x22\xf6\x6f\xef\x97\xfd\xe3\xe3\x2d\xfc\xe1\x7e\xd2\x34\xfd\xea\xa6\xd4\xdd\xf9\x52\xb5\x65\xbc\xcc\x0b\x88\xff\x06\xe2\x7e\x7e\x46\xfd\x03\x1f\xc1\x09\xc0\x80\x4a\x36\x64\xb9\xc4\x89\x3b\x6d\x0a\xd8\x77\xa4\x5a\xf8\x21\x93\x7f\x03\x00\x00\xff\xff\x15\x0d\x63\x63\x65\x08\x00\x00"

func ssd_mobilenet_v1_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v1_cocoYml,
		"SSD_MobileNet_v1_COCO.yml",
	)
}

func ssd_mobilenet_v1_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v1_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_MobileNet_v1_COCO.yml", size: 2149, mode: os.FileMode(420), modTime: time.Unix(1553755443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v2_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\xe0\x43\x76\x81\x44\xb2\x65\xc7\x6b\xeb\x50\xa0\xf0\xa2\xa7\x6d\x02\x74\xdb\x5e\x05\x8a\x1a\x49\x6c\x24\x52\xe0\x8c\x62\x27\xbf\xbe\xe0\x47\x64\x1b\x09\xd0\xf4\x62\x90\x9a\x37\xc3\x37\x33\x6f\x48\x6b\x31\x60\x01\x3f\x7f\x7e\x2f\x7f\x37\x95\xea\xf1\x01\xb9\x7c\xce\xcb\xc3\xe3\xe1\x11\x16\xe0\xac\x60\x1a\x78\x31\x93\x85\xc1\xd4\xd8\x27\x8d\x15\x03\x1e\x8d\x7d\x2a\x12\x80\xe0\xfd\x27\x6a\x32\xf6\xb7\xde\x1c\x61\x01\xb3\x1d\x1a\x63\x81\x3b\x8c\x7e\x00\xcf\x68\x49\x19\x5d\xc0\x2a\x5d\xe5\x57\xc8\x68\x01\x69\x34\x5b\xa1\x34\x27\x17\xd8\x25\x2c\x66\x80\xd2\x8d\xb1\x83\xe0\xb0\x06\xc2\x41\x68\x56\x72\xb6\x07\x6b\xe2\xe2\x08\xa5\xd1\x16\xb0\x80\x79\x43\x30\x11\xd6\xc0\x06\x46\xb4\x0e\x19\x98\x01\x3e\x8b\x7e\xf2\x31\x13\x00\x31\xd4\xdb\x8d\x4b\x0d\xa0\x1d\xa7\x02\xac\x50\xa3\x35\xff\xa0\xe4\x4c\x0a\x3b\xf4\x77\xec\x93\x6d\x7a\x73\x2c\x3c\xf6\x4e\x8e\x93\x87\xcb\xcf\xc1\x5b\x0f\x1f\x47\xb9\xdd\xf4\x58\x7c\xce\x33\xa2\xa3\xef\x27\x98\x5d\x3a\xd4\x48\xd2\xaa\x91\x7d\x39\x7f\x49\xe0\xb2\x5d\x8f\x95\xf3\x87\xef\xc8\x28\x7d\x51\x7d\x45\x6e\xe1\xd8\x29\xd9\x81\x22\xf0\xed\xc0\x1a\x8c\xf6\xad\xf4\xb2\xf8\x72\x30\xc3\x60\x74\x74\x26\xd7\x88\x83\xd1\x8c\x27\xfe\x0a\xb5\x60\x41\xc8\x69\x02\xf0\x17\x21\x10\xd5\xe5\xe0\x75\xa5\x83\xae\xa4\x91\xa6\xcc\x97\xab\x5d\xb9\x5c\x97\xf9\x1e\x1a\x6b\x86\x4b\x42\xf5\x35\x13\x78\x35\x26\x4d\x2c\x36\x68\x51\x4b\x24\xd7\xcf\xf3\xce\xb7\x52\x8c\xae\xb3\x19\x1c\xb1\x22\xc5\xe8\x96\xc8\x32\x4d\x21\xe4\x5d\x29\xdd\x5e\xa9\xf0\x0e\x3a\xe6\x91\x8a\x2c\x6b\x15\x77\x53\x95\x4a\x33\x64\xe7\xd2\x65\x1e\x47\x59\xd5\x9b\x2a\x1b\x04\x31\xda\xcc\x22\xa1\xb0\xb2\xcb\x8c\xcf\xb8\x9c\x49\x66\xed\xba\x36\x32\x9b\xf7\xa5\x77\x2e\x1d\xe9\xa1\x4e\x7a\x25\x51\x13\x16\xf0\xeb\x28\x64\x87\xf0\x23\xec\x6f\xe1\xef\xa8\xd6\xdc\x6b\x3b\xc2\xdc\x98\x9d\x79\x2a\x3d\x4e\xec\xd3\x0d\x75\x08\x7b\x4f\x9f\x5f\x46\x2c\x40\x0d\xa2\x45\x37\x44\xca\x12\x07\xb3\x83\x8a\x5e\xf1\x8b\xd7\xc8\x55\xdb\x5d\xe0\x80\x79\xf3\xbb\x30\xbf\x9d\x7c\x11\xca\x47\x18\x85\x1b\x50\x46\x4b\x41\xa6\x00\xd8\xe3\x80\x9a\xcb\x40\x61\x52\x9a\x77\xd1\xe2\xbd\xca\x5e\xbc\xb8\x99\xbb\xf1\x87\x94\xa1\xa8\x37\x89\x99\x78\x9c\xd8\xc5\x08\x7e\x95\x99\x74\xad\x74\x5b\x99\x53\xf2\x01\xcf\x00\x9f\x51\x50\x99\x13\x2c\x40\x7c\xc4\x38\x42\x67\xa2\xc9\x7b\xd2\xd7\x94\x9b\xde\x08\x5e\xe7\xde\x52\x99\x13\xd2\x4c\xf9\xdc\x43\xff\xfd\x26\x54\xc0\x9a\x4a\x54\xaa\x57\xac\x3e\x84\x92\x34\xf6\x0d\x2b\x7b\x41\xf4\x21\x2a\x5a\x02\xac\x41\xc1\x93\x45\x2a\x27\xdb\x17\xb3\x14\x69\x9d\x8a\x41\xbc\x1a\x2d\x8e\xe4\x05\x49\x6c\x2c\xa6\x7e\xae\x53\x63\xdb\x8c\x5e\x34\x21\x53\xe6\xe6\x27\xeb\x45\x85\x3d\xa5\x7c\xe2\xeb\x90\xb2\x43\xf9\x44\xd3\x50\xc0\x66\xb3\xda\xc9\xdd\x7d\xbd\x5c\xe1\x56\xee\xf2\xa6\xd9\xee\x36\xfb\x6a\x97\xaf\xf7\xdf\xee\xf7\x9b\xf5\x2e\xf1\xaa\x72\xf2\xa2\x11\xa5\x6a\x14\x52\x14\x5a\x6b\xc5\xd8\x81\xd0\x35\x1c\x51\xb5\x1d\x13\x90\x99\xac\x44\xa7\xbd\x4a\x10\x7a\xde\x09\x04\x5c\x39\x0a\xee\xfe\x47\x16\x71\xb6\xde\x4f\xdb\x7f\xdd\x13\x59\x63\xcd\x2b\xea\x52\xe9\x38\xfb\xa5\x3f\x3f\x1d\xab\x04\x40\x51\xe9\xa6\x53\x3d\xc7\xeb\xb4\x11\x3d\x39\x89\xab\x06\xd8\x4e\x78\xeb\xa4\x12\xae\xaf\xb7\x04\xdc\xcd\x26\xc0\x2d\xd8\x80\xd0\x10\xdd\xbd\xf7\xc2\x23\xcf\xe9\x5d\xd6\x22\x7c\xf0\xe1\x6a\xd4\x86\xd1\xad\xa3\x57\xa3\x7a\xf4\xef\x21\xbd\xa9\xf3\x7d\x29\x8f\x8a\x3b\x15\xa8\x9c\x8f\x0c\x47\x9d\x7b\xb7\x5e\x2d\x9b\xaa\xce\xf3\xed\x7e\x55\xed\x77\x1b\xf9\x6d\xb9\x6f\xf2\xba\x6a\xb6\xf7\xf7\xeb\xe6\x7e\x87\x89\x60\xb6\xaa\x9a\x38\x5c\x87\x78\x62\x2b\x62\xf3\xce\x96\x04\xe0\x49\xe9\xba\x80\xc3\xc3\x43\x4c\xc9\xed\x1d\x35\x8d\x93\x15\x3d\x68\x64\xff\xf6\x7e\x39\x3c\x3c\xdc\xc2\x1f\xee\x27\x4d\xd3\xaf\x6e\x4a\xdd\x9d\xaf\x74\x5b\xc6\xcb\xbc\x80\xf8\x6f\x20\xee\xe7\x67\xd4\x3f\xf0\x11\x9c\x00\x0c\x42\xab\x06\x89\x4b\x31\x71\x67\x6c\x01\x87\x0e\x75\x0b\x3f\x54\xf2\x6f\x00\x00\x00\xff\xff\x05\x68\x77\xeb\x65\x08\x00\x00"

func ssd_mobilenet_v2_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v2_cocoYml,
		"SSD_MobileNet_v2_COCO.yml",
	)
}

func ssd_mobilenet_v2_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v2_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_MobileNet_v2_COCO.yml", size: 2149, mode: os.FileMode(420), modTime: time.Unix(1553755443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v2_quantized_300x300_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe4\x36\x0c\xbd\xfb\x57\x10\x98\xc3\xee\x02\x59\xdb\xf3\x95\x3a\x3e\x14\x28\x66\xd1\x53\x9b\xa0\xdd\xb6\x57\x43\x96\x69\x5b\x8d\x2c\xb9\x22\x9d\x99\xe4\xd7\x17\x92\x1c\xcf\x0c\x92\x43\xf6\x32\x90\xcc\x47\xea\x91\x7c\x94\xc6\x88\x01\x4b\xf8\xfe\xfd\x5b\xf5\xbb\xad\x95\xc6\x7b\xe4\xea\x69\x53\xfd\x31\x09\xc3\xea\x05\x9b\x6a\x9b\xe7\xa7\x6d\x9e\x57\x87\x87\xc3\x03\xac\xc0\xe3\xc1\xb6\xf0\x6c\x27\x07\x83\x6d\x50\x27\xad\x13\x03\x1e\xad\x7b\x2c\x13\x80\x18\xef\x2f\x34\x64\xdd\xaf\xda\x1e\x61\x05\x8b\x1d\x5a\xeb\x80\x7b\x9c\xfd\x00\x9e\xd0\x91\xb2\xa6\x84\x75\xba\xde\x5c\x21\x67\x0b\x48\x6b\xd8\x09\x65\x38\xb9\xc0\xe6\xb0\x5a\x00\xca\xb4\xd6\x0d\x82\xe3\x1a\x08\x07\x4f\x5c\x2e\xf6\x68\x4d\x7c\x1c\xa1\x0c\xba\x12\x56\xb0\x6c\x08\x26\xc2\x06\xd8\xc2\x88\xce\x23\x23\x33\xc0\x27\xa1\xa7\x10\x33\x01\x10\x43\x73\xbb\xf3\xa9\x01\x74\xe3\x54\x82\x13\x6a\x74\xf6\x5f\x94\x9c\x49\xe1\x06\xfd\x95\x43\xb2\xad\xb6\xc7\x32\x60\xbf\xca\x71\x0a\x70\xf9\x31\x78\x17\xe0\xe3\x28\x6f\x77\x1a\xcb\x8f\x79\xce\xe8\xd9\xf7\x03\xcc\x2e\x1d\x1a\x24\xe9\xd4\xc8\xa1\x9c\x3f\x27\x70\xd9\xae\x87\xda\xfb\xc3\x37\x64\x94\xa1\xa8\xa1\x22\x37\x70\xec\x95\xec\x41\x11\x84\x76\x60\x03\xd6\x84\x56\x06\x59\x7c\x3e\xd8\x61\xb0\x66\x76\x26\xdf\x88\x83\x35\x8c\x27\xfe\x02\x8d\x60\x41\xc8\x69\x02\xf0\x37\x21\x10\x35\xd5\x10\x94\x66\xa2\xd2\xfe\x7b\xa3\x34\x69\xa5\xad\x36\xf9\xfa\xae\xca\xd7\x55\xbe\x85\xd6\xd9\xe1\x92\x62\x73\xcd\x0d\x5e\xac\x4d\x13\x87\x2d\x3a\x34\x12\xc9\x77\xf8\xbc\x0b\xcd\x15\xa3\xef\x75\x06\x47\xac\x49\x31\xfa\x25\xb2\x4c\x53\x88\x95\xa8\x95\xe9\xae\x74\xf9\x15\x7a\xe6\x91\xca\x2c\xeb\x14\xf7\x53\x9d\x4a\x3b\x64\xe7\x62\x66\x01\x47\x59\xad\x6d\x9d\x0d\x82\x18\x5d\xe6\x90\x50\x38\xd9\x67\x36\xd4\xa0\x5a\x48\x66\xdd\xb6\xb1\x32\x5b\xf6\x55\x70\xae\x3c\xe9\xa1\x49\xb4\x92\x68\x08\x4b\xf8\x65\x14\xb2\x47\xf8\x2d\xee\x6f\xe0\x9f\x59\xbf\x9b\xa0\xf6\x19\xe6\x07\xef\xcc\x53\x99\x71\xe2\x90\x6e\xac\x43\xdc\x07\xfa\xfc\x3c\x62\x09\x6a\x10\x1d\xfa\xb1\x52\x8e\x38\x9a\x3d\x54\x68\xc5\xcf\x41\x35\x57\x42\xf0\x81\x23\xe6\xd5\xef\xc2\xfc\x7a\xf2\x45\xa8\x10\x61\x14\x7e\x64\x19\x1d\x45\xe1\x02\xa0\xc6\x01\x0d\x57\x91\xc2\xa4\x0c\x17\xb3\x25\x78\x55\x5a\x3c\xfb\x29\xfc\x14\x0e\xa9\x62\x51\x3f\x25\x76\xe2\x71\x62\x1f\x23\xfa\xd5\x76\x32\x8d\x32\x5d\x6d\x4f\xc9\x3b\x3c\x23\x7c\x41\x41\x6d\x4f\xb0\x02\xf1\x1e\xe3\x19\xba\x10\x4d\xde\x92\xbe\xa6\xdc\x6a\x2b\x78\xbb\x09\x96\xda\x9e\x90\x16\xca\xe7\x1e\x86\xef\x9f\x62\x05\x9c\xad\x45\xad\xb4\x62\xf5\x2e\x94\xa4\x75\xaf\x58\xa9\x05\xd1\xbb\xa8\xd9\x12\x61\x2d\x0a\x9e\x1c\x52\x35\x39\x5d\x2e\x52\xa4\x6d\x2a\x06\xf1\x62\x8d\x38\x52\x10\x24\xb1\x75\x98\x86\x49\x4f\xad\xeb\x32\x7a\x36\x84\x4c\x99\x9f\x9f\x4c\x8b\x1a\x35\xa5\x7c\xe2\xeb\x90\xb2\x47\xf9\x48\xd3\x50\xc2\x6e\xb7\x2e\x64\xb1\x6f\xf2\x35\xde\xca\x62\xd3\xb6\xb7\xc5\xee\xae\x2e\x36\xdb\xbb\x9f\xf6\x77\xbb\x6d\x91\x04\x55\x79\x79\xd1\x88\x52\xb5\x0a\x69\x16\x5a\xe7\xc4\xd8\x83\x30\x0d\x1c\x51\x75\x3d\x13\x90\x9d\x9c\x44\xaf\xbd\x5a\x10\x06\xde\x09\x44\x5c\x35\x0a\xee\x7f\x20\x8b\x79\xb6\xde\x4e\xdb\x8f\xdf\x1c\x19\xb7\x5a\x31\x56\x81\x47\x3a\xd6\x09\x80\xa2\xca\x4f\xa9\x7a\x9a\x2f\xda\x56\x68\xf2\x52\x57\x2d\xb0\x9b\xf0\xc6\x4b\x26\x5e\x6c\xaf\x89\xf8\x3b\x4f\x80\x5f\xb0\x05\x61\x60\x76\x0f\xde\xab\x80\x3c\xa7\x79\x59\x93\xf8\x21\x84\x6b\xd0\x58\x46\xbf\x9e\xbd\x5a\xa5\x31\xbc\x94\xf4\xaa\xd2\xb7\x25\x3d\x2a\xee\x55\xa4\x72\x3e\x32\x1e\x75\xee\x61\x5e\xec\x8a\x62\xb7\xc3\x76\x2f\xda\x5a\xee\xb7\x9b\xa2\x41\xac\xdb\x7a\x5d\x34\xfb\x62\x9f\xdf\x25\x82\xd9\xa9\x7a\xe2\x78\x2d\xe2\x89\x9d\x98\x9b\x78\xb6\x24\x00\x8f\xca\x34\x25\x1c\xee\xef\xe7\x94\xfc\xde\x53\x33\x38\x39\xa1\xc1\x20\x87\x57\xf9\xf3\xe1\xfe\xfe\x06\xfe\xf4\x3f\x69\x9a\x7e\xf1\xd3\xea\x5f\x03\x65\xba\x6a\xbe\xe6\x4b\x98\xff\x27\xcc\xfb\xe5\x81\x0d\x4f\xff\x0c\x4e\x00\x06\x61\x54\x8b\xc4\x95\x98\xb8\xb7\xae\x84\x43\x8f\xa6\x4b\x7a\xd5\x34\xe8\x67\xdc\x4d\x98\xfc\x1f\x00\x00\xff\xff\xf0\xa2\x4c\x23\x9b\x08\x00\x00"

func ssd_mobilenet_v2_quantized_300x300_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v2_quantized_300x300_cocoYml,
		"SSD_MobileNet_v2_Quantized_300x300_COCO.yml",
	)
}

func ssd_mobilenet_v2_quantized_300x300_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v2_quantized_300x300_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_MobileNet_v2_Quantized_300x300_COCO.yml", size: 2203, mode: os.FileMode(420), modTime: time.Unix(1553752989, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_resnet50_fpn_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x38\x0c\xbd\xfb\x57\x10\xc8\x61\x66\x80\x8e\x9d\x0f\x27\x4d\x7d\x58\x60\x91\xc1\x9c\x06\xe9\x62\x66\x77\xaf\x82\x2c\xd3\xb6\xb6\xb6\x64\x88\x74\x93\xf4\xd7\x2f\x24\xb9\xf9\x40\x7b\xe8\x02\x7b\x09\xc4\xf0\x91\x7a\x22\x1f\x25\x1b\xd9\x63\x01\xbf\x7e\x7d\x13\x3f\x91\xf6\xc8\xeb\xb9\xf8\xfe\xc7\x5e\xec\x1e\x77\x8f\x30\x03\xef\x05\x5b\xc3\xc9\x8e\x0e\x7a\x5b\x61\x97\xd4\x4e\xf6\x78\xb0\xee\xa9\x48\x00\x62\xf4\x9f\x68\xc8\xba\xef\x9d\x3d\xc0\x0c\xce\x7e\xa8\xad\x03\x6e\x71\x8a\x03\x78\x46\x47\xda\x9a\x02\x16\xe9\x62\x79\x83\x9c\x3c\xa0\xac\x61\x27\xb5\xe1\xe4\x0a\x3b\x87\xd9\x19\xa0\x4d\x6d\x5d\x2f\x39\xae\x81\xb0\x97\x86\xb5\x3a\xfb\xa3\x37\xf1\x79\xa4\x36\xe8\x0a\x98\xc1\xd9\x20\x18\x09\x2b\x60\x0b\x03\x3a\x8f\x8c\xcc\x00\x9f\x65\x37\x86\x9c\x09\x80\xec\xab\x4d\xee\x8f\x06\xd0\x0c\x63\x01\x4e\xea\xc1\xd9\x7f\x50\x71\xa6\xa4\xeb\xbb\xaf\x1c\x0e\x5b\x77\xf6\x50\x04\xec\x57\x35\x8c\x01\xae\x3e\x06\x6f\x02\x7c\x18\xd4\x26\xef\xb0\xf8\x58\xe4\x84\x9e\x62\x3f\xc0\xec\x3a\xa0\x42\x52\x4e\x0f\x1c\xca\xf9\x5b\x02\xd7\xed\x7a\x2c\x7d\x3c\x7c\x43\x46\x15\x8a\x1a\x2a\x72\x07\x87\x56\xab\x16\x34\x41\x68\x07\x56\x60\x4d\x68\x65\x90\xc5\xe7\x9d\xed\x7b\x6b\xa6\x60\xf2\x8d\xd8\x59\xc3\x78\xe4\x2f\x50\x49\x96\x84\x9c\x26\x00\x7f\x11\x02\x51\x25\x1c\x92\x09\xba\x7a\x5e\x88\x7a\x30\x82\x5a\xe9\xb0\x12\xa5\x3d\x8a\xc1\x61\xa5\x15\x5b\x27\x36\xf9\xfc\xb8\xc9\xe7\x42\x59\x65\x17\xb9\xa0\x93\x51\x62\x39\x5f\x6c\xc5\xfc\x5e\xcc\x57\x50\x3b\xdb\x5f\xf3\xae\x6e\x09\xc3\x8b\xb5\x69\xe2\xb0\x46\x87\x46\x21\xf9\xb6\x5f\xac\xd0\x71\x39\x78\x01\x64\x70\xc0\x92\x34\xa3\x5f\x22\xab\x34\x85\x58\x9e\x52\x9b\xe6\x46\xac\x5f\xa1\x65\x1e\xa8\xc8\xb2\x46\x73\x3b\x96\xa9\xb2\x7d\x76\xa9\x70\x16\x70\x94\x95\x9d\x2d\xb3\x5e\x12\xa3\xcb\x1c\x12\x4a\xa7\xda\xcc\x86\xc2\x88\x33\xc9\xac\x59\x55\x56\x65\x67\x5b\x84\x60\xe1\x49\xf7\x55\xd2\x69\x85\x86\xb0\x80\xdf\x07\xa9\x5a\x84\x1f\xd1\xbe\x83\xbf\x27\x51\x2f\xc3\x08\x4c\x30\x3f\x8d\x17\x9e\xda\x0c\x23\x87\xe3\xc6\x3a\x44\x3b\xd0\xe7\xd3\x80\x05\xe8\x5e\x36\xe8\x67\x4d\x3b\xe2\xe8\xf6\x50\xd9\x69\x3e\x05\x29\xdd\xa8\xc3\x27\x8e\x98\xd7\xb8\x2b\xf7\xeb\xce\x57\xa9\x42\x86\x41\xfa\x39\x66\x74\x14\xd5\x0c\x80\x1d\xf6\x68\x58\x44\x0a\xa3\x36\xbc\x9d\x3c\x21\x4a\x74\xf2\xe4\x47\xf3\x53\xd8\x44\xc4\xa2\x7e\x4a\xec\xc8\xc3\xc8\x3e\x47\x8c\x2b\xed\x68\x2a\x6d\x9a\xd2\x1e\x93\x77\x78\x46\xf8\x19\x05\xa5\x3d\xc2\x0c\xe4\x7b\x8c\x27\xe8\x99\x68\xf2\x96\xf4\x2d\xe5\xba\xb3\x92\x57\xcb\xe0\x29\xed\x11\xe9\x4c\xf9\xd2\xc3\xf0\xff\xa7\x58\x01\x67\x4b\x59\xea\x4e\xb3\x7e\x17\x4a\xca\xba\x57\xac\xea\x24\xd1\xbb\xa8\xc9\x13\x61\x35\x4a\x1e\x1d\x92\x18\x5d\x57\x9c\xa5\x48\xab\x54\xf6\xf2\xc5\x1a\x79\xa0\x20\x48\x62\xeb\x30\x0d\xe3\x9f\x5a\xd7\x64\x74\x32\x84\x4c\x99\x1f\xa3\xac\x93\x25\x76\x94\xf2\x91\x6f\x53\xaa\x16\xd5\x13\x8d\x7d\x01\x79\xbe\xd8\xaa\xed\xba\x9a\x2f\x70\xa3\xb6\xcb\xba\xde\x6c\xf3\x87\x72\xbb\x5c\x3d\xdc\xaf\x1f\xf2\xd5\x36\x09\xaa\xf2\xf2\xa2\x01\x95\xae\x35\xd2\x24\xb4\xc6\xc9\xa1\x05\x69\x2a\x38\xa0\x6e\x5a\x26\x20\x3b\x3a\x85\x5e\x7b\xa5\x24\x0c\xbc\x13\x88\x38\x31\x48\x6e\xff\xc3\x29\xa6\xd9\x7a\x3b\x6d\xff\xd3\x75\x92\xd5\xce\xbe\xa0\x11\xda\x4c\x57\x84\x08\x34\xd3\xa1\x4c\x00\x34\x09\x3f\xc4\xfa\x79\xba\x9c\x6b\xd9\x91\x9f\x04\x5d\x03\xbb\x11\xef\xbc\xa2\xe2\x65\xf8\x7a\x4e\x7f\x4f\x4a\xf0\x0b\xb6\x20\x0d\x4c\xe1\x21\x7a\x16\x90\x97\x2a\x5c\x97\x2c\xfe\x11\xd2\x55\x68\x2c\xa3\x5f\x4f\x51\xb5\xee\x30\xbc\xae\xf4\x2a\xe2\xb7\x15\x3f\x68\x6e\x75\xa4\x72\xd9\x32\x6e\x75\x69\xf1\xb6\xdc\x60\x85\xe5\x22\x5f\xad\x37\x9b\x7a\xbb\x9a\xe3\x6a\x7d\xbf\x59\xe7\xab\x6d\x99\xaf\x97\x75\x9d\x48\x66\xa7\xcb\x91\xe3\xad\x89\x47\x76\x72\xea\xf1\xc5\x93\x00\x3c\x69\x53\x15\xb0\xdb\xef\xa7\x23\x79\xdb\x53\x33\x38\x3a\xd9\x81\x41\x0e\x2f\xf9\xe7\xdd\x7e\x7f\x07\x3f\xfd\x4f\x9a\xa6\x5f\xfc\x30\xfb\x17\x44\x9b\x46\x4c\x4f\x43\x01\xd3\xb7\xc5\x64\x9f\x1f\xe5\xf0\xb9\x30\x81\x13\x80\x5e\x1a\x5d\x23\xb1\x90\x23\xb7\xd6\x15\xb0\x6b\xd1\x34\xf0\x43\x27\xff\x06\x00\x00\xff\xff\x6a\x1b\x76\xd7\xb3\x08\x00\x00"

func ssd_resnet50_fpn_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_resnet50_fpn_cocoYml,
		"SSD_ResNet50_FPN_COCO.yml",
	)
}

func ssd_resnet50_fpn_cocoYml() (*asset, error) {
	bytes, err := ssd_resnet50_fpn_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_ResNet50_FPN_COCO.yml", size: 2227, mode: os.FileMode(420), modTime: time.Unix(1553755443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC_AlexNet_Caffe.yml": bvlc_alexnet_caffeYml,
	"BVLC_GoogLeNet_Caffe.yml": bvlc_googlenet_caffeYml,
	"DeepLabv3_MobileNetv2_PASCAL_VOC.yml": deeplabv3_mobilenetv2_pascal_vocYml,
	"Faster_RCNN_ResNet50_COCO.yml": faster_rcnn_resnet50_cocoYml,
	"Mask_RCNN_Inception_v2_COCO.yml": mask_rcnn_inception_v2_cocoYml,
	"MobileNet_v1_1.0_224.yml": mobilenet_v1_10_224Yml,
	"SRGAN.yml": srganYml,
	"SSD_MobileNet_v1_COCO.yml": ssd_mobilenet_v1_cocoYml,
	"SSD_MobileNet_v2_COCO.yml": ssd_mobilenet_v2_cocoYml,
	"SSD_MobileNet_v2_Quantized_300x300_COCO.yml": ssd_mobilenet_v2_quantized_300x300_cocoYml,
	"SSD_ResNet50_FPN_COCO.yml": ssd_resnet50_fpn_cocoYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC_AlexNet_Caffe.yml": &bintree{bvlc_alexnet_caffeYml, map[string]*bintree{}},
	"BVLC_GoogLeNet_Caffe.yml": &bintree{bvlc_googlenet_caffeYml, map[string]*bintree{}},
	"DeepLabv3_MobileNetv2_PASCAL_VOC.yml": &bintree{deeplabv3_mobilenetv2_pascal_vocYml, map[string]*bintree{}},
	"Faster_RCNN_ResNet50_COCO.yml": &bintree{faster_rcnn_resnet50_cocoYml, map[string]*bintree{}},
	"Mask_RCNN_Inception_v2_COCO.yml": &bintree{mask_rcnn_inception_v2_cocoYml, map[string]*bintree{}},
	"MobileNet_v1_1.0_224.yml": &bintree{mobilenet_v1_10_224Yml, map[string]*bintree{}},
	"SRGAN.yml": &bintree{srganYml, map[string]*bintree{}},
	"SSD_MobileNet_v1_COCO.yml": &bintree{ssd_mobilenet_v1_cocoYml, map[string]*bintree{}},
	"SSD_MobileNet_v2_COCO.yml": &bintree{ssd_mobilenet_v2_cocoYml, map[string]*bintree{}},
	"SSD_MobileNet_v2_Quantized_300x300_COCO.yml": &bintree{ssd_mobilenet_v2_quantized_300x300_cocoYml, map[string]*bintree{}},
	"SSD_ResNet50_FPN_COCO.yml": &bintree{ssd_resnet50_fpn_cocoYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

